import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as d,c,a,b as e,d as n,e as r}from"./app-GjMnSfh8.js";const t={},p=a("p",null,"原文：",-1),o={href:"https://www.cnblogs.com/twcat/p/16912345.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://mp.weixin.qq.com/s?__biz=MzI3NDc4NTQ0Nw==&mid=2247551648&idx=1&sn=29b3b5d1d8bf7d7cf149f9f05c4547e1",target:"_blank",rel:"noopener noreferrer"},v={href:"https://zhuanlan.zhihu.com/p/448259969",target:"_blank",rel:"noopener noreferrer"},h=r(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># ps与grep 常用组合用法，查找特定进程</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一、目录操作命令" tabindex="-1"><a class="header-anchor" href="#一、目录操作命令" aria-hidden="true">#</a> 一、目录操作命令</h2><h3 id="目录切换" tabindex="-1"><a class="header-anchor" href="#目录切换" aria-hidden="true">#</a> 目录切换</h3><p>语法：</p><div class="language-sg line-numbers-mode" data-ext="sg"><pre class="language-sg"><code>cd /        切换到根目录
cd /usr     切换到根目录下的usr目录
cd ../      切换到上一级目录 或者  cd ..
cd ~        切换到home目录
cd -        切换到上次访问的目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看目录" tabindex="-1"><a class="header-anchor" href="#查看目录" aria-hidden="true">#</a> 查看目录</h3><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看当前目录下的所有目录和文件</span>
<span class="token function">ls</span>
<span class="token comment"># 查看当前目录下的所有目录和文件（包括隐藏的文件）</span>
<span class="token function">ls</span> <span class="token parameter variable">-a</span>
<span class="token comment"># 或 ll 列表查看当前目录下的所有目录和文件（列表查看，显示更多信息）</span>
<span class="token function">ls</span> <span class="token parameter variable">-l</span>
<span class="token comment">#查看指定目录下的所有目录和文件 如：ls /usr</span>
<span class="token function">ls</span> /dir
<span class="token comment"># 将目录下的所有文件列出来(含属性与隐藏档)</span>
<span class="token function">ls</span> <span class="token parameter variable">-al</span> ~
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建目录" tabindex="-1"><a class="header-anchor" href="#创建目录" aria-hidden="true">#</a> 创建目录</h3><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token punctuation">[</span>-mp<span class="token punctuation">]</span> 目录名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>选项与参数：</p><ul><li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li><li>-i ：互动模式，在删除前会询问使用者是否动作</li><li>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</li></ul></blockquote><h3 id="删除目录或文件" tabindex="-1"><a class="header-anchor" href="#删除目录或文件" aria-hidden="true">#</a> 删除目录或文件</h3><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token punctuation">[</span>-fir<span class="token punctuation">]</span> 文件或目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>选项与参数：</p><ul><li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li><li>-i ：互动模式，在删除前会询问使用者是否动作</li><li>-r ：递归删除！最常用在目录的删除了！这是非常危险的选项！！！</li></ul></blockquote><h3 id="删除空的目录" tabindex="-1"><a class="header-anchor" href="#删除空的目录" aria-hidden="true">#</a> 删除空的目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rmdir</span> <span class="token punctuation">[</span>-p<span class="token punctuation">]</span> 目录名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>选项与参数：</p><p>-p ：连同上一级『空的』目录也一起删除</p></blockquote><h3 id="目录修改" tabindex="-1"><a class="header-anchor" href="#目录修改" aria-hidden="true">#</a> 目录修改</h3><p><strong>mv 移动文件与目录，或修改名称</strong></p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> <span class="token punctuation">[</span>-fiu<span class="token punctuation">]</span> 来源档<span class="token punctuation">(</span>source<span class="token punctuation">)</span> 目标档<span class="token punctuation">(</span>destination<span class="token punctuation">)</span>
<span class="token function">mv</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> source1 source2 source3 <span class="token punctuation">..</span><span class="token punctuation">..</span> directory 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>选项与参数：</p><ul><li>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</li><li>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</li><li>-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)</li></ul></blockquote><p><strong>cp 复制文件或目录</strong></p><p>语法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token punctuation">[</span>-adfilprsu<span class="token punctuation">]</span> 来源档<span class="token punctuation">(</span>source<span class="token punctuation">)</span> 目标档<span class="token punctuation">(</span>destination<span class="token punctuation">)</span>
<span class="token function">cp</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> source1 source2 source3 <span class="token punctuation">..</span><span class="token punctuation">..</span> directory 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>选项与参数：</p><ul><li>-a：相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)</li><li>-d：若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；</li><li>-f：为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；</li><li>-i：若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</li><li>-l：进行硬式连结(hard link)的连结档创建，而非复制文件本身；</li><li>-p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)；</li><li>-r：递归持续复制，用於目录的复制行为；(常用)</li><li>-s：复制成为符号连结档 (symbolic link)，亦即『捷径』文件；</li><li>-u：若 destination 比 source 旧才升级 destination ！</li></ul></blockquote><p><strong>一、重命名目录</strong><br> 命令：mv 当前目录 新目录<br> 例如：mv aaa bbb 将目录aaa改为bbb<br> 注意：mv的语法不仅可以对目录进行重命名而且也可以对各种文件，压缩包等进行 重命名的操作</p><p><strong>二、剪切目录</strong><br> 命令：mv 目录名称 目录的新位置<br> 示例：将/usr/tmp目录下的aaa目录剪切到 /usr目录下面 mv /usr/tmp/aaa /usr<br> 注意：mv语法不仅可以对目录进行剪切操作，对文件和压缩包等都可执行剪切操作</p><p><strong>三、拷贝目录</strong><br> 命令：cp -r 目录名称 目录拷贝的目标位置 -r代表递归<br> 示例：将/usr/tmp目录下的aaa目录复制到 /usr目录下面 cp /usr/tmp/aaa /usr<br> 注意：cp命令不仅可以拷贝目录还可以拷贝文件，压缩包等，拷贝文件和压缩包时不 用写-r递归</p><h3 id="搜索目录" tabindex="-1"><a class="header-anchor" href="#搜索目录" aria-hidden="true">#</a> 搜索目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="显示当前目录" tabindex="-1"><a class="header-anchor" href="#显示当前目录" aria-hidden="true">#</a> 显示当前目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">pwd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、文件操作命令" tabindex="-1"><a class="header-anchor" href="#二、文件操作命令" aria-hidden="true">#</a> 二、文件操作命令</h2><h3 id="新建文件" tabindex="-1"><a class="header-anchor" href="#新建文件" aria-hidden="true">#</a> 新建文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> testfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除文件" tabindex="-1"><a class="header-anchor" href="#删除文件" aria-hidden="true">#</a> 删除文件</h3><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token punctuation">[</span>-fir<span class="token punctuation">]</span> 文件或目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>选项与参数：</p><ul><li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li><li>-i ：互动模式，在删除前会询问使用者是否动作</li><li>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</li></ul></blockquote><h3 id="修改文件" tabindex="-1"><a class="header-anchor" href="#修改文件" aria-hidden="true">#</a> 修改文件</h3><p><strong>打开文件</strong></p><p>命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：</p><p>打开当前目录下的aa.txt文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">vi</span> aa.txt 
 <span class="token comment"># 或者</span>
 <span class="token function">vim</span> aa.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：使用<code>vi</code>编辑器打开文件后，并不能编辑，因为此时处于命令模式，点击键盘i/a/o进入编辑模式。</p><p><strong>编辑文件</strong></p><p>使用<code>vi</code>编辑器打开文件后点击按键：i ，a或者o即可进入编辑模式。</p><p>i：在光标所在字符前开始插入 a：在光标所在字符后开始插入 o：在光标所在行的下面另起一新行插入</p><blockquote><p>编辑模式下：</p><ul><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DEL</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME</strong>/<strong>END</strong>，移动光标到行首/行尾</li><li><strong>Page Up</strong>/<strong>Page Down</strong>，上/下翻页</li><li><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul></blockquote><p><strong>保存文件：</strong></p><p>第一步：<code>ESC</code> 进入命令行模式 第二步：: 进入底行模式 第三步：<code>wq</code> 保存并退出编辑</p><p><strong>取消编辑：</strong></p><p>第一步：<code>ESC</code> 进入命令行模式 第二步：: 进入底行模式 第三步：<code>q!</code> 撤销本次修改并退出编辑</p><h3 id="文件的查看" tabindex="-1"><a class="header-anchor" href="#文件的查看" aria-hidden="true">#</a> 文件的查看</h3><p>Linux系统中使用以下命令来查看文件的内容：</p><ul><li>cat 由第一行开始显示文件内容</li><li>tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</li><li>nl 显示的时候，顺道输出行号！</li><li>more 一页一页的显示文件内容</li><li>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！</li><li>head 只看头几行</li><li>tail 只看尾巴几行</li></ul><p>你可以使用 *man [命令]*来查看各个命令的使用文档，如 ：man cp。</p><h4 id="cat" tabindex="-1"><a class="header-anchor" href="#cat" aria-hidden="true">#</a> cat</h4><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token punctuation">[</span>-AbEnTv<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-A ：相当於 -vET 的整合选项，可列出一些特殊字符而不是空白而已；</li><li>-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！</li><li>-E ：将结尾的断行字节 $ 显示出来；</li><li>-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；</li><li>-T ：将 [tab] 按键以 ^I 显示出来；</li><li>-v ：列出一些看不出来的特殊字符</li></ul><p>查看 /etc/issue 这个文件的内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/issue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>tac</code>与<code>cat</code>命令刚好相反，文件内容从最后一行开始显示，可以看出 <code>tac</code> 是 <code>cat</code> 的倒着写！如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tac</span> /etc/issue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="nl" tabindex="-1"><a class="header-anchor" href="#nl" aria-hidden="true">#</a> nl</h4><p>显示行号</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nl</span> /etc/issue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="more" tabindex="-1"><a class="header-anchor" href="#more" aria-hidden="true">#</a> more</h4><p>一页一页翻动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">more</span> /etc/man_db.config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 more 这个程序的运行过程中，你有几个按键可以按的：</p><ul><li>空白键 (space)：代表向下翻一页；</li><li>Enter ：代表向下翻『一行』；</li><li>/字串 ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；</li><li>:f ：立刻显示出档名以及目前显示的行数；</li><li>q ：代表立刻离开 more ，不再显示该文件内容。</li><li>b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。</li></ul><h4 id="less" tabindex="-1"><a class="header-anchor" href="#less" aria-hidden="true">#</a> less</h4><p>一页一页翻动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">less</span> /etc/man.config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>less运行时可以输入的命令有：</p><ul><li>空白键 ：向下翻动一页；</li><li>[pagedown]：向下翻动一页；</li><li>[pageup] ：向上翻动一页；</li><li>/字串 ：向下搜寻『字串』的功能；</li><li>?字串 ：向上搜寻『字串』的功能；</li><li>n ：重复前一个搜寻 (与 / 或 ? 有关！)</li><li>N ：反向的重复前一个搜寻 (与 / 或 ? 有关！)</li><li>q ：离开 less 这个程序；</li></ul><h4 id="head" tabindex="-1"><a class="header-anchor" href="#head" aria-hidden="true">#</a> head</h4><p>取出文件前面几行</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">head</span> <span class="token punctuation">[</span>-n number<span class="token punctuation">]</span> 文件  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-n ：后面接数字，代表显示几行的意思</li></ul><h4 id="tail" tabindex="-1"><a class="header-anchor" href="#tail" aria-hidden="true">#</a> tail</h4><p>取出文件后面几行</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token punctuation">[</span>-n number<span class="token punctuation">]</span> 文件  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-n ：后面接数字，代表显示几行的意思</li><li>-f ：表示持续侦测后面所接的档名，要等到按下[ctrl]-c才会结束tail的侦测</li></ul><h3 id="权限修改" tabindex="-1"><a class="header-anchor" href="#权限修改" aria-hidden="true">#</a> 权限修改</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三、压缩文件操作" tabindex="-1"><a class="header-anchor" href="#三、压缩文件操作" aria-hidden="true">#</a> 三、压缩文件操作</h2><h3 id="tar" tabindex="-1"><a class="header-anchor" href="#tar" aria-hidden="true">#</a> tar</h3><p>这条命令是将所有 <code>.jpg</code> 的文件打成一个名为 <code>all.tar</code> 的包。<code>-c</code> 是表示产生新的包，<code>-f</code> 指定包的文件名。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>tar -cf all.tar *.jpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是将所有 <code>.gif</code> 的文件增加到 <code>all.tar</code> 的包里面去，<code>-r</code> 是表示增加文件的意思。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>tar -rf all.tar *.gif
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是更新原来 <code>tar</code> 包 <code>all.tar</code> 中 <code>logo.gif</code> 文件，<code>-u </code>是表示更新文件的意思。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>tar -uf all.tar logo.gif
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是列出 <code>all.tar </code>包中所有文件，<code>-t</code> 是列出文件的意思。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> tar -tf all.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是解出 <code>all.tar</code> 包中所有文件，<code>-x </code>是解开的意思。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>tar -xf all.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是将所有 <code>.jpg</code> 的文件打成一个 <code>tar</code> 包，并且将其用 <code>gzip</code> 压缩，生成一个 <code>gzip</code> 压缩过的包，包名为 <code>all.tar.gz</code>。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>tar -czf all.tar.gz *.jpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是将上面产生的包解开。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>tar -xzf all.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="zip" tabindex="-1"><a class="header-anchor" href="#zip" aria-hidden="true">#</a> zip</h3><p>这条命令是将所有<code>.jpg</code> 的文件压缩成一个 zip 包:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">zip</span> all.zip *.jpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是将 <code>all.zip</code> 中的所有文件解压出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">unzip</span> all.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="四、查找命令" tabindex="-1"><a class="header-anchor" href="#四、查找命令" aria-hidden="true">#</a> 四、查找命令</h2><h3 id="grep" tabindex="-1"><a class="header-anchor" href="#grep" aria-hidden="true">#</a> grep</h3><p><strong><code>grep</code>命令是一种强大的文本搜索工具</strong></p><p>使用实例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查找指定ssh服务进程</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> sshd
<span class="token comment"># 查找指定服务进程，排除gerp身</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> sshd <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span>
<span class="token comment"># 查找指定进程个数</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> sshd <span class="token parameter variable">-c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从文件内容查找匹配指定字符串的行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> “被查找的字符串” 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例子：在当前目录里第一级文件夹中寻找包含指定字符串的 .in 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> “thermcontact” /.in
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从文件内容查找与正则表达式匹配的行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> –e “正则表达式” 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查找时不区分大小写：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> –i “被查找的字符串” 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查找匹配的行数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-c</span> “被查找的字符串” 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从文件内容查找不匹配指定字符串的行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> –v “被查找的字符串” 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="find" tabindex="-1"><a class="header-anchor" href="#find" aria-hidden="true">#</a> find</h3><p><code>find</code>命令在目录结构中搜索文件，并对搜索结果执行指定的操作。</p><p><code>find</code> 默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。</p><p>使用实例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.log&quot;</span> <span class="token parameter variable">-ls</span>  在当前目录查找以.log结尾的文件，并显示详细信息。 
<span class="token function">find</span> /root/ <span class="token parameter variable">-perm</span> <span class="token number">600</span>   查找/root/目录下权限为600的文件 
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-name</span> <span class="token string">&quot;*.log&quot;</span>  查找当目录，以.log结尾的普通文件 
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> d <span class="token operator">|</span> <span class="token function">sort</span>   查找当前所有目录并排序 
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-size</span> +100M  查找当前目录大于100M的文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子：从根目录开始查找所有扩展名为 <code>.log</code> 的文本文件，并找出包含 <code>“ERROR”</code> 的行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> / <span class="token parameter variable">-type</span> f <span class="token parameter variable">-name</span> “*.log” <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">grep</span> “ERROR”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例子：从当前目录开始查找所有扩展名为 <code>.in</code> 的文本文件，并找出包含 <code>“thermcontact”</code> 的行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> “*.in” <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">grep</span> “thermcontact”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="whereis" tabindex="-1"><a class="header-anchor" href="#whereis" aria-hidden="true">#</a> whereis</h3><p><code>whereis</code>命令是定位可执行文件、源代码文件、帮助文件在文件系统中的位置。这些文件的属性应属于原始代码，二进制文件，或是帮助文件。</p><p>使用实例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将和ls文件相关的文件都查找出来</span>
<span class="token function">whereis</span> <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="which" tabindex="-1"><a class="header-anchor" href="#which" aria-hidden="true">#</a> which</h3><p><code>which</code>命令的作用是在<code>PATH</code>变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。</p><p>使用实例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查找pwd命令所在路径</span>
<span class="token function">which</span> <span class="token builtin class-name">pwd</span> 
<span class="token comment"># 查找path中java的路径</span>
<span class="token function">which</span> <span class="token function">java</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、下载与安装" tabindex="-1"><a class="header-anchor" href="#五、下载与安装" aria-hidden="true">#</a> 五、下载与安装</h2><h3 id="yum" tabindex="-1"><a class="header-anchor" href="#yum" aria-hidden="true">#</a> yum</h3><p>语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token punctuation">(</span>选项<span class="token punctuation">)</span> <span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-h：显示帮助信息；
-y：对所有的提问都回答“yes”；
-c：指定配置文件；
-q：安静模式；
-v：详细模式；
-d：设置调试等级（0-10）；
-e：设置错误等级（0-10）；
-R：设置yum处理一个命令的最大等待时间；
-C：完全从缓存中运行，而不去下载或者更新任何头文件。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>install：安装rpm软件包；
update：更新rpm软件包；
check-update：检查是否有可用的更新rpm软件包；
remove：删除指定的rpm软件包；
list：显示软件包的信息；
search：检查软件包的信息；
info：显示指定的rpm软件包的描述信息和概要信息；
clean：清理yum过期的缓存；
shell：进入yum的shell提示符；
resolvedep：显示rpm软件包的依赖关系；
localinstall：安装本地的rpm软件包；
localupdate：显示本地rpm软件包进行更新；
deplist：显示rpm软件包的所有依赖关系。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>yum 常用命令：</strong></p><ul><li>1.列出所有可更新的软件清单命令：yum check-update</li><li>2.更新所有软件命令：yum update</li><li>3.仅安装指定的软件命令：yum install &lt;package_name&gt;</li><li>4.仅更新指定的软件命令：yum update &lt;package_name&gt;</li><li>5.列出所有可安裝的软件清单命令：yum list</li><li>6.删除软件包命令：yum remove &lt;package_name&gt;</li><li>7.查找软件包 命令：yum search</li><li>8.清除缓存命令: <ul><li>yum clean packages: 清除缓存目录下的软件包</li><li>yum clean headers: 清除缓存目录下的 headers</li><li>yum clean oldheaders: 清除缓存目录下旧的 headers</li><li>yum clean, yum clean all (= yum clean packages; yum clean oldheaders) :清除缓存目录下的软件包及旧的headers</li></ul></li></ul></blockquote>`,162);function m(b,g){const s=l("ExternalLinkIcon");return d(),c("div",null,[p,a("p",null,[a("a",o,[e("https://www.cnblogs.com/twcat/p/16912345.html"),n(s)]),e("、")]),a("p",null,[a("a",u,[e("https://mp.weixin.qq.com/s?__biz=MzI3NDc4NTQ0Nw==&mid=2247551648&idx=1&sn=29b3b5d1d8bf7d7cf149f9f05c4547e1"),n(s)]),e("、"),a("a",v,[e("https://zhuanlan.zhihu.com/p/448259969"),n(s)])]),h])}const x=i(t,[["render",m],["__file","Linux 常用命令.html.vue"]]);export{x as default};
