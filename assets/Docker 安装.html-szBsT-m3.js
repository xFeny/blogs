import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c as t,e as s}from"./app-tutGecYK.js";const a={},r=s(`<p>卸载系统之前的 Docker</p><p>这步也算是检查，之前没装docker，也就没有东西可被删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
                  docker-client <span class="token punctuation">\\</span>
                  docker-client-latest <span class="token punctuation">\\</span>
                  docker-common <span class="token punctuation">\\</span>
                  docker-latest <span class="token punctuation">\\</span>
                  docker-latest-logrotate <span class="token punctuation">\\</span>
                  docker-logrotate <span class="token punctuation">\\</span>
                  docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装<code>yum-utils</code>软件包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置存储库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>推荐设置为阿里源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行以下命令安装docker：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动 Docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行以下命令设置 Docker 开机自启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>至此，docker安装完成！</p><h2 id="docker的常用命令" tabindex="-1"><a class="header-anchor" href="#docker的常用命令" aria-hidden="true">#</a> Docker的常用命令</h2><table><thead><tr><th>序号</th><th>命令</th><th>释义</th></tr></thead><tbody><tr><td>1</td><td>docker --help</td><td>帮助，查看docker命令</td></tr><tr><td>2</td><td>systemctl start docker</td><td>启动docker</td></tr><tr><td>3</td><td>systemctl stop docker</td><td>关闭docker</td></tr><tr><td>5</td><td>systemctl enable docker</td><td>自启动docker</td></tr><tr><td>6</td><td>systemctl restart docker</td><td>重启docker</td></tr><tr><td></td><td>systemctl status docker</td><td>查看docker的运行状态</td></tr><tr><td>7</td><td>docker version</td><td>查看docker版本信息</td></tr><tr><td>8</td><td>docker-v</td><td>查看docker版本号</td></tr><tr><td>9</td><td>docker info</td><td>查看docker版本信息</td></tr><tr><td>10</td><td>docker images</td><td>查看docker所有镜像</td></tr><tr><td>11</td><td>docker pull [镜像名]</td><td>拉取镜像，不指定版本号时，默认拉取最新版本。如：<br>① 不指定版本 docker pull mysql<br>② 指定版本 docker pull mysql:5.7.7</td></tr><tr><td>12</td><td>docker rmi -f [镜像名/镜像ID]</td><td>按名或ID删除镜像</td></tr><tr><td>13</td><td>docker image rm [镜像名/镜像ID]</td><td>强制删除镜像</td></tr><tr><td>14</td><td>docker ps</td><td>查看正在运行的镜像容器</td></tr><tr><td>15</td><td>docker ps -a</td><td>查看时所有镜像容器</td></tr><tr><td>16</td><td>docker logs -f [-n 10] [镜像名/镜像ID]</td><td>查看镜像容器日志， -n 10 显示最新的行数</td></tr><tr><td>17</td><td>docker update [容器名] --restart=always</td><td>设置docker内容器的自启动。<br>docker内的容器默认是不会自启动的，要自启动需要设置。<br>如 docker update redis --restart=always<br>和 docker update mysql --restart=always</td></tr></tbody></table>`,18),n=[r];function c(o,i){return d(),t("div",null,n)}const p=e(a,[["render",c],["__file","Docker 安装.html.vue"]]);export{p as default};
