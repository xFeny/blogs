import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as d,c as t,a as n,b as a,d as e,e as i}from"./app-WKHSwOTI.js";const c={},o=i('<h1 id="nginx-安装" tabindex="-1"><a class="header-anchor" href="#nginx-安装" aria-hidden="true">#</a> Nginx 安装</h1><h2 id="windows-下安装" tabindex="-1"><a class="header-anchor" href="#windows-下安装" aria-hidden="true">#</a> Windows 下安装</h2><h3 id="一、下载安装" tabindex="-1"><a class="header-anchor" href="#一、下载安装" aria-hidden="true">#</a> 一、下载安装</h3>',3),p={href:"https://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>选择最新的Stable version（稳定版本）下载到本地</p><img src="http://oss.feny.ink/blogs/images/202312281742294.png" alt="image-20231228174212239" style="zoom:50%;"><p>下载完成后，解压放入本地非中文的文件夹中</p><h3 id="二、启动-nginx" tabindex="-1"><a class="header-anchor" href="#二、启动-nginx" aria-hidden="true">#</a> 二、启动 nginx</h3><p>在此之前打开<strong>conf</strong>文件夹下的<strong>nginx.conf</strong>查看端口占用情况</p><p>默认是80端口，改成自己要部署网站使用的端口。改好以后再使用命令启动。</p><p>进入解压后的nginx，启动cmd，输入 start nginx 启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>start nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="http://oss.feny.ink/blogs/images/202312281745994.png" alt="image-20231228174525951" style="zoom:50%;"><img src="http://oss.feny.ink/blogs/images/202312281745583.png" alt="image-20231228174542552" style="zoom:50%;"><div class="hint-container tip"><p class="hint-container-title">相关启动命令</p><p>注意不要直接双击nginx.exe，这样会导致修改配置后重启、停止nginx无效，需要手动关闭任务管理器内的所有nginx进程</p><p>在nginx.exe目录，打开命令行工具，用命令 启动/关闭/重启nginx</p><p>start nginx 启动nginx</p><p>nginx -s reload 修改配置后重新加载生效</p><p>nginx -s reopen 重新打开日志文件</p><p>nginx -t -c /path/to/nginx.conf 测试nginx配置文件是否正确</p><p>nginx -s stop 快速停止nginx</p><p>nginx -s quit 完整有序的停止nginx</p></div><h3 id="三、验证是否成功" tabindex="-1"><a class="header-anchor" href="#三、验证是否成功" aria-hidden="true">#</a> 三、验证是否成功</h3>`,12),m=n("strong",null,"http://localhost:端口",-1),u={href:"http://localhost",target:"_blank",rel:"noopener noreferrer"},b=i(`<img src="http://oss.feny.ink/blogs/images/202312281755015.png" alt="image-20231228175540971" style="zoom:50%;"><h2 id="centos-下安装" tabindex="-1"><a class="header-anchor" href="#centos-下安装" aria-hidden="true">#</a> CentOS 下安装</h2><h3 id="一、准备工作" tabindex="-1"><a class="header-anchor" href="#一、准备工作" aria-hidden="true">#</a> 一、准备工作</h3><p>首先需要安装gcc，安装G++编译器，安装PCRE库，安装zlib库，安装openssl</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看是否存在</span>
gcc <span class="token parameter variable">-v</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc
<span class="token comment"># 用于解析正则表达式</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> pcre pcre-devel
<span class="token comment"># zlib压缩和解压缩依赖</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> zlib zlib-devel
<span class="token comment"># SSL 安全的加密的套接字协议层，用于HTTP安全传输，也就是https</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> openssl openssl-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、安装-nginx" tabindex="-1"><a class="header-anchor" href="#二、安装-nginx" aria-hidden="true">#</a> 二、安装 nginx</h3><h4 id="_1、下载nginx解压安装包" tabindex="-1"><a class="header-anchor" href="#_1、下载nginx解压安装包" aria-hidden="true">#</a> 1、下载nginx解压安装包</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> http://nginx.org/download/nginx-1.24.0.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nginx-1.24.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、编译安装nginx" tabindex="-1"><a class="header-anchor" href="#_2、编译安装nginx" aria-hidden="true">#</a> 2、编译安装Nginx</h4><p>进入nginx-1.24.0目录下，按顺序执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> nginx-1.24.0
./configure --with-http_ssl_module
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、启动服务" tabindex="-1"><a class="header-anchor" href="#三、启动服务" aria-hidden="true">#</a> 三、启动服务</h3><p>切换目录到/usr/local/nginx/sbin下面，启动nginx服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/nginx/sbin
./nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>也可直接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/nginx/sbin/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看nginx服务是否启动成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>停止服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="四、开放端口" tabindex="-1"><a class="header-anchor" href="#四、开放端口" aria-hidden="true">#</a> 四、开放端口</h3><p>开启80端口，以便外部访问</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="五、验证是否成功" tabindex="-1"><a class="header-anchor" href="#五、验证是否成功" aria-hidden="true">#</a> 五、验证是否成功</h3><p>浏览器输入服务器IP地址，如下图所示即表示成功。</p><img src="http://oss.feny.ink/blogs/images/202312281705155.png" alt="image-20231228170558106" style="zoom:50%;"><h3 id="六、设置开机启动" tabindex="-1"><a class="header-anchor" href="#六、设置开机启动" aria-hidden="true">#</a> 六、设置开机启动</h3><p>编辑 /etc/systemd/system/nginx.service 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/systemd/system/nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加内容如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token comment">#描述服务</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>nginx
<span class="token comment">#描述服务类别</span>
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target
 
<span class="token comment">#服务运行参数的设置，注意【Service】的启动、重启、停止命令都要用绝对路径</span>
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token comment">#后台运行的形式</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking
<span class="token comment">#服务具体运行的命令</span>
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-c</span> /usr/local/nginx/conf/nginx.conf
<span class="token comment">#重启命令</span>
<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> reload
<span class="token comment">#停止命令</span>
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> quit
<span class="token comment">#表示给服务分配独立的临时空间</span>
<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true
 
<span class="token comment">#运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</span>
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ExecStart 配置成自己的路径</p></blockquote><p>重新加载系统服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开机自动启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>所有命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 启动nginx服务</span>
systemctl start nginx
<span class="token comment"># 停止nginx服务</span>
systemctl stop nginx
<span class="token comment"># 设置开机自启动</span>
systemctl <span class="token builtin class-name">enable</span> nginx
<span class="token comment"># 停止开机自启动</span>
systemctl disable nginx
<span class="token comment"># 查看服务当前状态</span>
systemctl status nginx
<span class="token comment"># 重新启动服务</span>
systemctl restart nginx
<span class="token comment"># 查看所有已启动的服务</span>
systemctl list-units <span class="token parameter variable">--type</span><span class="token operator">=</span>service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="七、其他" tabindex="-1"><a class="header-anchor" href="#七、其他" aria-hidden="true">#</a> 七、其他</h3><p>如果是阿里云服务器，可能还需要在服务器控制台安全组添加相应的端口才行</p><img src="http://oss.feny.ink/blogs/images/202312282140114.png" style="zoom:50%;"><h2 id="docker-下安装" tabindex="-1"><a class="header-anchor" href="#docker-下安装" aria-hidden="true">#</a> Docker 下安装</h2><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像" aria-hidden="true">#</a> 拉取镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建挂载目录" tabindex="-1"><a class="header-anchor" href="#创建挂载目录" aria-hidden="true">#</a> 创建挂载目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/docker/nginx/conf /data/docker/nginx/conf/conf.d /data/docker/nginx/logs /data/docker/nginx/html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="复制-nginx-配置文件" tabindex="-1"><a class="header-anchor" href="#复制-nginx-配置文件" aria-hidden="true">#</a> 复制 nginx 配置文件</h3><p>启动 <code>nginx</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span><span class="token operator">=</span>nginx <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-d</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将容器中的<code>nginx.conf</code>文件和<code>conf.d</code>文件夹复制到宿主机</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将容器nginx.conf文件复制到宿主机</span>
<span class="token function">docker</span> <span class="token function">cp</span> nginx:/etc/nginx/nginx.conf /data/docker/nginx/conf
<span class="token comment"># 将容器conf.d文件夹下内容复制到宿主机</span>
<span class="token function">docker</span> <span class="token function">cp</span> nginx:/etc/nginx/conf.d /data/docker/nginx/conf
<span class="token comment"># 将容器中的html文件夹复制到宿主机</span>
<span class="token function">docker</span> <span class="token function">cp</span> nginx:/usr/share/nginx/html /data/docker/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>停止 <code>nginx</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> stop nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除 <code>nginx</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">rm</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="启动容器并作目录挂载" tabindex="-1"><a class="header-anchor" href="#启动容器并作目录挂载" aria-hidden="true">#</a> 启动容器并作目录挂载</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-idt</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>nginx <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-p</span> <span class="token number">443</span>:443 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /data/docker/nginx/html:/usr/share/nginx/html <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /data/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /data/docker/nginx/conf/conf.d/:/etc/nginx/conf.d/ <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /data/docker/nginx/logs:/var/log/nginx <span class="token punctuation">\\</span>
nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>命令含义</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run  在docker中启动一个容器实例
		<span class="token parameter variable">-itd</span>
            i：以交互模式运行容器，通常与 <span class="token parameter variable">-t</span> 同时使用；
            t：为容器重新分配一个伪输入终端，通常与 <span class="token parameter variable">-i</span> 同时使用；
            d：表示后台启动
		<span class="token parameter variable">-p</span> <span class="token number">80</span>:80  容器与主机映射端口为，主机80，容器80
		<span class="token parameter variable">--name</span> nginx  容器运行后的名称
		<span class="token parameter variable">--restart</span><span class="token operator">=</span>always  自动启动容器
		<span class="token parameter variable">-v</span> /data/docker/nginx/html:/usr/share/nginx/html  挂载nginx静态文件
		<span class="token parameter variable">-v</span> /data/docker/nginx/conf/nginx.conf  挂载nginx.conf配置文件
		<span class="token parameter variable">-v</span> /data/docker/nginx/conf/conf.d/  挂载nginx配置文件
		<span class="token parameter variable">-v</span> /data/docker/nginx/logs:/var/log/nginx  挂载nginx日志文件
		nginx	运行的版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部署完成！！！</p><h2 id="nginx-高可用" tabindex="-1"><a class="header-anchor" href="#nginx-高可用" aria-hidden="true">#</a> Nginx 高可用</h2>`,67),g={href:"https://www.jianshu.com/p/b60fcab2a734",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/wenxuehai/p/15013654.html",target:"_blank",rel:"noopener noreferrer"};function x(k,f){const s=r("ExternalLinkIcon");return d(),t("div",null,[o,n("p",null,[a("官网下载地址："),n("a",p,[a("https://nginx.org/en/download.html"),e(s)])]),v,n("p",null,[a("浏览器输入在浏览器输入："),m,a(" ， 默认80端口直接"),n("a",u,[a("http://localhost"),e(s)]),a("，能看到界面说明启动成功。")]),b,n("p",null,[n("a",g,[a("https://www.jianshu.com/p/b60fcab2a734"),e(s)])]),n("p",null,[n("a",h,[a("https://www.cnblogs.com/wenxuehai/p/15013654.html"),e(s)])])])}const w=l(c,[["render",x],["__file","Nginx 安装.html.vue"]]);export{w as default};
