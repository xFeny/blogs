import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as t,c,a as s,b as n,d as e,e as i}from"./app-3HwIjC1l.js";const p={},d=i('<h1 id="node-js-安装" tabindex="-1"><a class="header-anchor" href="#node-js-安装" aria-hidden="true">#</a> Node.js 安装</h1><h2 id="windows-下安装" tabindex="-1"><a class="header-anchor" href="#windows-下安装" aria-hidden="true">#</a> Windows 下安装</h2><h3 id="一、下载" tabindex="-1"><a class="header-anchor" href="#一、下载" aria-hidden="true">#</a> 一、下载</h3>',3),r={href:"https://nodejs.org/en",target:"_blank",rel:"noopener noreferrer"},u={href:"http://www.nodejs.com.cn/",target:"_blank",rel:"noopener noreferrer"},m=i(`<figure><img src="http://oss.feny.ink/blogs/images/202312281327821.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="二、安装" tabindex="-1"><a class="header-anchor" href="#二、安装" aria-hidden="true">#</a> 二、安装</h3><p>（1）、下载好安装包后双击安装，点击 Next 显示Node.js的许可协议页面：<br><img src="http://oss.feny.ink/blogs/images/202312281327327.png" alt="" loading="lazy"></p><p>（2）、勾选“I accept the terms in the License Agreement”同意许可协议，并单击Next下一步，出现如下界面：<br><img src="http://oss.feny.ink/blogs/images/202312281327420.png" alt="" loading="lazy"></p><p>（3）、Node.js默认安装路径为“C:\\Program Files\\nodejs\\”，你可以修改，在这里我改到了D盘，单击Next，出现安装模式及模块选择界面：<br><img src="http://oss.feny.ink/blogs/images/202312281327732.png" alt="" loading="lazy"></p><p>（4）、确认无误后，点击Install，开始安装：<br><img src="http://oss.feny.ink/blogs/images/202312281327896.png" alt="" loading="lazy"></p><p>（5）、安装完成，点击Finish即可</p><p>（6）、配置环境变量</p><p>默认Node.js安装完毕，会自动在系统的path环境变量中配置了node.exe的目录路径；<br> 但是可能你安装完成后，cmd命令下输入node提示错误（需配置环境）。</p><p>打开系统环境变量，在系统变量列表中找到path变量，添加Node.js安装路劲</p><p>（7）、检测是否安装成功</p><figure><img src="http://oss.feny.ink/blogs/images/202312281327544.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="三、配置淘宝镜像" tabindex="-1"><a class="header-anchor" href="#三、配置淘宝镜像" aria-hidden="true">#</a> 三、配置淘宝镜像</h3><p>1、查看当前镜像源<br> 首先我们需要查看当前Node.js使用的镜像源。在命令行中输入以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config get registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此命令将返回Node.js当前使用的镜像源地址，如果是默认的官方镜像源，将返回以下结果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://registry.npmjs.org/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、使用淘宝镜像<br> 要使用淘宝镜像，我们需要将npm注册表的地址从默认的官方镜像源切换到淘宝源。命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此命令将注册表地址改为淘宝镜像源，使用淘宝源即可享受更快的下载速度。</p><h3 id="四、自定义-npm-全局包下载路径" tabindex="-1"><a class="header-anchor" href="#四、自定义-npm-全局包下载路径" aria-hidden="true">#</a> 四、自定义 npm 全局包下载路径</h3><p>1、查看 npm 默认路径配置</p><p>分别执行以下查看命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config get prefix

<span class="token function">npm</span> config get cache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、配置自定义的全局模块安装目录</p><p>在node.js安装目录下新建两个文件夹 node_global和node_cache<br> 分别执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">&quot;D:\\software<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode_global&quot;</span>

<span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">&quot;D:\\software<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode_cache&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、环境配置</p><p>D:\\software\\nodejs 为 Node 的安装路径，在此路劲下分别创建 node_global 和 node_cache 两个文件夹</p><p>在“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量”<br> （1）、在【系统变量】下新建【NODE_PATH】，输入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>D:\\software\\nodejs\\node_global\\node_modules
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）、在【系统变量】下的【Path】添加上Node的路径（一般安装Node时已经添加进来）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>D:\\software\\nodejs\\
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）、在【用户变量】下的【Path】添加上</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>D:\\software\\nodejs\\node_global
D:\\software\\nodejs\\node_cache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="五、遇到的问题" tabindex="-1"><a class="header-anchor" href="#五、遇到的问题" aria-hidden="true">#</a> 五、遇到的问题</h3><h4 id="问题一、自定义-npm-全局包下载路径遇到的问题" tabindex="-1"><a class="header-anchor" href="#问题一、自定义-npm-全局包下载路径遇到的问题" aria-hidden="true">#</a> 问题一、自定义 npm 全局包下载路径遇到的问题</h4><p>自定义路径后配置好，尝试全局安装yarn试试是否修改成功：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">yarn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行命令后报以下报错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> ERR<span class="token operator">!</span> code EPERM
<span class="token function">npm</span> ERR<span class="token operator">!</span> syscall <span class="token function">mkdir</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span> path D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>nodejs<span class="token punctuation">\\</span>node_cache<span class="token punctuation">\\</span>_cacache
<span class="token function">npm</span> ERR<span class="token operator">!</span> errno <span class="token parameter variable">-4048</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span> Error: EPERM: operation not permitted, <span class="token function">mkdir</span> <span class="token string">&#39;D:\\software\\nodejs\\node_cache\\_cacache&#39;</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span>  <span class="token punctuation">[</span>Error: EPERM: operation not permitted, <span class="token function">mkdir</span> <span class="token string">&#39;D:\\software\\nodejs\\node_cache\\_cacache&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span>   errno: -4048,
<span class="token function">npm</span> ERR<span class="token operator">!</span>   code: <span class="token string">&#39;EPERM&#39;</span>,
<span class="token function">npm</span> ERR<span class="token operator">!</span>   syscall: <span class="token string">&#39;mkdir&#39;</span>,
<span class="token function">npm</span> ERR<span class="token operator">!</span>   path: <span class="token string">&#39;D:\\\\software\\\\nodejs\\\\node_cache\\\\_cacache&#39;</span>,
<span class="token function">npm</span> ERR<span class="token operator">!</span>   requiredBy: <span class="token string">&#39;.&#39;</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span> <span class="token punctuation">}</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span> The operation was rejected by your operating system.
<span class="token function">npm</span> ERR<span class="token operator">!</span> It&#39;s possible that the <span class="token function">file</span> was already <span class="token keyword">in</span> use <span class="token punctuation">(</span>by a text editor or antivirus<span class="token punctuation">)</span>,
<span class="token function">npm</span> ERR<span class="token operator">!</span> or that you lack permissions to access it.
<span class="token function">npm</span> ERR<span class="token operator">!</span>
<span class="token function">npm</span> ERR<span class="token operator">!</span> If you believe this might be a permissions issue, please double-check the
<span class="token function">npm</span> ERR<span class="token operator">!</span> permissions of the <span class="token function">file</span> and its containing directories, or try running
<span class="token function">npm</span> ERR<span class="token operator">!</span> the <span class="token builtin class-name">command</span> again as root/Administrator.

<span class="token function">npm</span> ERR<span class="token operator">!</span> Log files were not written due to an error writing to the directory: D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>nodejs<span class="token punctuation">\\</span>node_cache<span class="token punctuation">\\</span>_logs
<span class="token function">npm</span> ERR<span class="token operator">!</span> You can rerun the <span class="token builtin class-name">command</span> with <span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">--loglevel</span><span class="token operator">=</span>verbose<span class="token variable">\`</span></span> to see the logs <span class="token keyword">in</span> your terminal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解决方案：</strong><br> 找到安装node.js的文件夹 -右键-属性-安全，给用户完全控制的权限。<br><img src="http://oss.feny.ink/blogs/images/202312281327606.png" alt="" loading="lazy"><br><img src="http://oss.feny.ink/blogs/images/202312281327924.png" alt="" loading="lazy"></p><p>设置安后重新执行命令，安装成功</p><figure><img src="http://oss.feny.ink/blogs/images/202312281327068.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到刚安装的 yarn 出现在自定义 npm 全局包下载路径中，问题解决</p><figure><img src="http://oss.feny.ink/blogs/images/202312281327908.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="centos-下安装" tabindex="-1"><a class="header-anchor" href="#centos-下安装" aria-hidden="true">#</a> CentOS 下安装</h2><h3 id="一、下载安装-node-js" tabindex="-1"><a class="header-anchor" href="#一、下载安装-node-js" aria-hidden="true">#</a> 一、下载安装 Node.js</h3>`,48),v={href:"https://nodejs.org/en",target:"_blank",rel:"noopener noreferrer"},b={href:"https://nodejs.org/download/release/",target:"_blank",rel:"noopener noreferrer"},g=i(`<img src="http://oss.feny.ink/blogs/images/202401011243516.png" alt="image-20240101124349466" style="zoom:50%;"><p>点击<code>Other Downloads</code></p><img src="http://oss.feny.ink/blogs/images/202401011226404.png" alt="image-20240101122618350" style="zoom:50%;"><p>鼠标右键复制链接</p><img src="http://oss.feny.ink/blogs/images/202401011234911.png" style="zoom:50%;"><p>若<code>wget</code>未安装，先安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下载 <code>Node</code> 解压：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 可以修改为你想要的 Node 安装路劲</span>
<span class="token builtin class-name">cd</span> /usr/local/
<span class="token function">wget</span> https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-x64.tar.xz
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> node-v20.10.0-linux-x64.tar.xz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、配置环境变量" tabindex="-1"><a class="header-anchor" href="#二、配置环境变量" aria-hidden="true">#</a> 二、配置环境变量</h3><p>修改<code>/etc/profile</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在<code>profile</code>文件末尾加入下面内容，并保存</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># set Node.js environment</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">NODEJS</span><span class="token operator">=</span>/usr/local/node-v20.10.0-linux-x64
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$NODEJS</span>/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>刷新环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="三、建立软连接-是否安装成功" tabindex="-1"><a class="header-anchor" href="#三、建立软连接-是否安装成功" aria-hidden="true">#</a> 三、建立软连接，是否安装成功</h3><p>建立软连接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 建立 node 软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/node-v20.10.0-linux-x64/bin/node /usr/bin
<span class="token comment"># 建立 npm 软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/node-v20.10.0-linux-x64/bin/npm /usr/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>验证是否安装成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># node -v</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># npm -v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong> CentOS 7 安装 Node v18 及以后版本执行 node -v 会报错，具体解决办法看<a href="#%E5%85%AD%E3%80%81%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98">遇到的问题</a></p></blockquote><h3 id="四、切换淘宝镜像" tabindex="-1"><a class="header-anchor" href="#四、切换淘宝镜像" aria-hidden="true">#</a> 四、切换淘宝镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry http://registry.npm.taobao.org/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="五、自定义-npm-全局包下载路径" tabindex="-1"><a class="header-anchor" href="#五、自定义-npm-全局包下载路径" aria-hidden="true">#</a> 五、自定义 npm 全局包下载路径</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">&quot;/data/.cache/node/node_global&quot;</span>

<span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">&quot;/data/.cache/node/node_cache&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="六、遇到的问题" tabindex="-1"><a class="header-anchor" href="#六、遇到的问题" aria-hidden="true">#</a> 六、遇到的问题</h3><h4 id="问题一、centos-7-下安装node-js-配置好环境变量后-验证是否成功时报以下错误" tabindex="-1"><a class="header-anchor" href="#问题一、centos-7-下安装node-js-配置好环境变量后-验证是否成功时报以下错误" aria-hidden="true">#</a> 问题一、CentOS 7 下安装Node.js，配置好环境变量后，验证是否成功时报以下错误：</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># node -v</span>
node: /lib64/libm.so.6: version <span class="token variable"><span class="token variable">\`</span>GLIBC_2.27&#39; not found <span class="token punctuation">(</span>required by <span class="token function">node</span><span class="token punctuation">)</span>
node: /lib64/libc.so.6: version <span class="token variable">\`</span></span>GLIBC_2.25<span class="token string">&#39; not found (required by node)
node: /lib64/libc.so.6: version \`GLIBC_2.28&#39;</span> not found <span class="token punctuation">(</span>required by <span class="token function">node</span><span class="token punctuation">)</span>
node: /lib64/libstdc++.so.6: version <span class="token variable"><span class="token variable">\`</span>CXXABI_1.3.9&#39; not found <span class="token punctuation">(</span>required by <span class="token function">node</span><span class="token punctuation">)</span>
node: /lib64/libstdc++.so.6: version <span class="token variable">\`</span></span>GLIBCXX_3.4.20<span class="token string">&#39; not found (required by node)
node: /lib64/libstdc++.so.6: version \`GLIBCXX_3.4.21&#39;</span> not found <span class="token punctuation">(</span>required by <span class="token function">node</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>问题原因：</strong> <code>Node</code>从<code>v18</code>开始不再支持<code>CentOS 7</code>，而<code>CentOS 7</code>的 <code>GLIBC</code> 版本过低，造成报错</p><p>查看<code>GLIBC</code>版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ldd <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong> 直接升级系统为 CentOS 8，可以有效解决问题</p></blockquote><p><strong>解决办法：</strong></p><p>①、升级<code>bison </code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> bison
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②、升级 <code>gcc</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装devtoolset-8-gcc</span>
yum <span class="token function">install</span> centos-release-scl
yum <span class="token function">install</span> devtoolset-8
scl <span class="token builtin class-name">enable</span> devtoolset-8 -- <span class="token function">bash</span>

<span class="token comment"># 启用工具</span>
<span class="token builtin class-name">source</span> /opt/rh/devtoolset-8/enable

<span class="token comment"># 安装GCC-8</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> devtoolset-8-gcc devtoolset-8-gcc-c++ devtoolset-8-binutils

<span class="token comment"># 设置环境变量</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;source /opt/rh/devtoolset-8/enable&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③、升级<code>make</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载并解压安装包</span>
<span class="token function">wget</span> https://ftp.gnu.org/gnu/make/make-4.3.tar.gz --no-check-certificate
<span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> make-4.3.tar.gz
<span class="token builtin class-name">cd</span> make-4.3/

<span class="token comment"># 安装到指定目录</span>
./configure  <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/make
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>

<span class="token comment"># 创建软链接</span>
<span class="token builtin class-name">cd</span> /usr/bin/
<span class="token comment"># backup</span>
<span class="token function">mv</span> <span class="token function">make</span> make.bak
<span class="token function">ln</span> <span class="token parameter variable">-sv</span> /usr/local/make/bin/make /usr/bin/make
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>④、升级 <code>libstdc++</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span>
yum whatprovides libstdc++.so.6
yum update <span class="token parameter variable">-y</span> libstdc++.x86_64

<span class="token function">wget</span> http://www.vuln.cn/wp-content/uploads/2019/08/libstdc.so_.6.0.26.zip
<span class="token function">unzip</span> libstdc.so_.6.0.26.zip
<span class="token function">cp</span> libstdc++.so.6.0.26 /lib64/
<span class="token builtin class-name">cd</span> /lib64

<span class="token comment"># 把原来的命令做备份</span>
<span class="token function">cp</span> libstdc++.so.6 libstdc++.so.6.bak
<span class="token function">rm</span> <span class="token parameter variable">-f</span> libstdc++.so.6

<span class="token comment"># 重新链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> libstdc++.so.6.0.26 libstdc++.so.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑤、更新 <code>glibc</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span>
<span class="token function">wget</span> http://ftp.gnu.org/gnu/glibc/glibc-2.28.tar.gz
<span class="token function">tar</span> xf glibc-2.28.tar.gz
<span class="token builtin class-name">cd</span> glibc-2.28/ <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> build  <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> build

<span class="token comment"># 配置环境</span>
<span class="token punctuation">..</span>/configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr --disable-profile --enable-add-ons --with-headers<span class="token operator">=</span>/usr/include --with-binutils<span class="token operator">=</span>/usr/bin
<span class="token comment"># 安装</span>
<span class="token comment"># make -j4 多线程编译</span>
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>make</code>安装耗时比较久，需耐心等待完成</p><p>⑥、查看版本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ldd <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>⑦、再次执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,49);function h(k,f){const a=o("ExternalLinkIcon");return t(),c("div",null,[d,s("p",null,[n("Node.js官网："),s("a",r,[n("https://nodejs.org/en"),e(a)]),n(" Node.js中文网："),s("a",u,[n("http://www.nodejs.com.cn/"),e(a)])]),m,s("p",null,[n("Node.js官网："),s("a",v,[n("https://nodejs.org/en"),e(a)])]),s("p",null,[n("Node.js 所有发布版本："),s("a",b,[n("https://nodejs.org/download/release/"),e(a)])]),g])}const _=l(p,[["render",h],["__file","Node.js安装.html.vue"]]);export{_ as default};
