import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as l,a as n,b as a,d as e,e as t}from"./app-yphNKyuS.js";const r={},p=t('<h1 id="alibaba-nacos-相关" tabindex="-1"><a class="header-anchor" href="#alibaba-nacos-相关" aria-hidden="true">#</a> Alibaba Nacos 相关</h1><h2 id="一、centos-下安装-nacos" tabindex="-1"><a class="header-anchor" href="#一、centos-下安装-nacos" aria-hidden="true">#</a> 一、CentOS 下安装 Nacos</h2><h3 id="单机模式运行" tabindex="-1"><a class="header-anchor" href="#单机模式运行" aria-hidden="true">#</a> 单机模式运行</h3><h4 id="第一步、最新版安装包" tabindex="-1"><a class="header-anchor" href="#第一步、最新版安装包" aria-hidden="true">#</a> 第一步、最新版安装包</h4>',4),d=n("code",null,"Nacos GitHub",-1),u={href:"https://github.com/alibaba/nacos/releases/",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"Nacos ",-1),m=t(`<img src="http://oss.feny.ink/blogs/images/202401011303922.png" alt="image-20240101130354872" style="zoom:50%;"><h4 id="第二步、下载解压缩。" tabindex="-1"><a class="header-anchor" href="#第二步、下载解压缩。" aria-hidden="true">#</a> 第二步、下载解压缩。</h4><p>进入或创建一个你喜欢的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/alibaba/nacos/releases/download/2.3.0/nacos-server-2.3.0.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> nacos-server-2.3.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="第三步、初始化数据库表" tabindex="-1"><a class="header-anchor" href="#第三步、初始化数据库表" aria-hidden="true">#</a> 第三步、初始化数据库表</h4><p>使用任意 <code>MySQL</code> 客户端工具连接到 <code>MySQL</code> 数据库服务器，创建名为<code>nacos</code>的数据库，之后使用 <code>MySQL</code> 客户端执 行 <code>nacos/conf/mysql-schema.sql</code> 文件，完成建表工作。<br><img src="http://oss.feny.ink/blogs/images/202312281325914.png" alt="" loading="lazy"></p><h4 id="第四步、配置-nacos-数据源" tabindex="-1"><a class="header-anchor" href="#第四步、配置-nacos-数据源" aria-hidden="true">#</a> 第四步、配置 Nacos 数据源</h4><p>找到配置文件 <code>application.properties</code>，文件路径如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nacos/conf/application.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认数据源配置都被<code>#</code>号注释，删除注释按下方示例配置数据源即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">spring.sql.init.platform</span><span class="token operator">=</span>mysql

<span class="token comment">### Count of DB:</span>
<span class="token assign-left variable">db.num</span><span class="token operator">=</span><span class="token number">1</span>

<span class="token comment">### Connect URL of DB:</span>
<span class="token assign-left variable">db.url.0</span><span class="token operator">=</span>jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span><span class="token assign-left variable">connectTimeout</span><span class="token operator">=</span><span class="token number">1000</span><span class="token operator">&amp;</span><span class="token assign-left variable">socketTimeout</span><span class="token operator">=</span><span class="token number">3000</span><span class="token operator">&amp;</span><span class="token assign-left variable">autoReconnect</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useUnicode</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useSSL</span><span class="token operator">=</span>false<span class="token operator">&amp;</span><span class="token assign-left variable">serverTimezone</span><span class="token operator">=</span>UTC<span class="token operator">&amp;</span><span class="token assign-left variable">allowPublicKeyRetrieval</span><span class="token operator">=</span>true
<span class="token assign-left variable">db.user.0</span><span class="token operator">=</span>root
<span class="token assign-left variable">db.password.0</span><span class="token operator">=</span><span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>遇到的问题</strong><code>Nacos</code>启动时报以下错误错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Caused by: com.mysql.cj.exceptions.UnableToConnectException: Public Key Retrieval is not allowed
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
        at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>
        at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>
        at com.mysql.cj.exceptions.ExceptionFactory.createException<span class="token punctuation">(</span>ExceptionFactory.java:61<span class="token punctuation">)</span>
        at com.mysql.cj.exceptions.ExceptionFactory.createException<span class="token punctuation">(</span>ExceptionFactory.java:85<span class="token punctuation">)</span>
        at com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep<span class="token punctuation">(</span>CachingSha2PasswordPlugin.java:130<span class="token punctuation">)</span>
        <span class="token punctuation">..</span>. <span class="token number">142</span> common frames omitted
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解决办法：</strong> 在 <code>db.url</code> 后面加上 <code>allowPublicKeyRetrieval=true</code> 即可。</p><h4 id="第五步、以单点方式启动-nacos。" tabindex="-1"><a class="header-anchor" href="#第五步、以单点方式启动-nacos。" aria-hidden="true">#</a> 第五步、以单点方式启动 Nacos。</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> nacos/bin
<span class="token function">sh</span> startup.sh <span class="token parameter variable">-m</span> standalone
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>默认 <code>Nacos</code> 以后台模式启动，利用 <code>tail</code> 命令查看启动日志。可以看到 <code>Nacos</code> 默认端口为 <code>8848</code>，下 面日志说明 <code>Nacos</code> 单机模式已启动成功。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> /usr/local/nacos/logs/start.out
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="第六步、设置防火墙对-nacos-端口放行。" tabindex="-1"><a class="header-anchor" href="#第六步、设置防火墙对-nacos-端口放行。" aria-hidden="true">#</a> 第六步、设置防火墙对 Nacos 端口放行。</h4><table><thead><tr><th>端口</th><th>描述</th></tr></thead><tbody><tr><td>8848</td><td>主端口，客户端、控制台及OpenAPI所使用的HTTP端口</td></tr><tr><td>9848</td><td>客户端gRPC请求服务端端口，用于客户端向服务端发起连接和请求</td></tr><tr><td>9849</td><td>服务端gRPC请求服务端端口，用于服务间同步等</td></tr><tr><td>7848</td><td>Jraft请求服务端端口，用于处理服务端间的Raft相关请求</td></tr></tbody></table><p>如果服务器启动了防火墙，需要开放以下端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">8848</span>/tcp <span class="token parameter variable">--permanent</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">7848</span>/tcp <span class="token parameter variable">--permanent</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">9848</span>/tcp <span class="token parameter variable">--permanent</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">9849</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启防火墙使配置生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，<code>Nacos</code>已单机部署完毕。</p><h4 id="第七步-进入-nacos-管理界面" tabindex="-1"><a class="header-anchor" href="#第七步-进入-nacos-管理界面" aria-hidden="true">#</a> 第七步，进入 Nacos 管理界面</h4>`,26),b={href:"http://localhost:8848/nacos/",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),h=n("img",{src:"http://oss.feny.ink/blogs/images/202312281325743.png",alt:"",loading:"lazy"},null,-1),g=t(`<h3 id="nacos集群模式运行" tabindex="-1"><a class="header-anchor" href="#nacos集群模式运行" aria-hidden="true">#</a> Nacos集群模式运行</h3><h4 id="集群部署架构图" tabindex="-1"><a class="header-anchor" href="#集群部署架构图" aria-hidden="true">#</a> 集群部署架构图</h4><figure><img src="http://oss.feny.ink/blogs/images/202401011259702.jpeg" alt="deployDnsVipMode.jpg" tabindex="0" loading="lazy"><figcaption>deployDnsVipMode.jpg</figcaption></figure><h4 id="第一步、环境准备" tabindex="-1"><a class="header-anchor" href="#第一步、环境准备" aria-hidden="true">#</a> 第一步、环境准备</h4><p>请确保是在环境中安装使用:</p><ol><li>64 bit OS Linux/Unix/Mac，推荐使用Linux系统。</li><li>64 bit JDK 1.8+；</li><li>3个或3个以上Nacos节点才能构成集群。</li></ol><h4 id="第二步、下载安装-nacos" tabindex="-1"><a class="header-anchor" href="#第二步、下载安装-nacos" aria-hidden="true">#</a> 第二步、下载安装 Nacos</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/
<span class="token function">wget</span> https://github.com/alibaba/nacos/releases/download/2.3.0/nacos-server-2.3.0.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> nacos-server-2.3.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="第三步、初始化数据库表-1" tabindex="-1"><a class="header-anchor" href="#第三步、初始化数据库表-1" aria-hidden="true">#</a> 第三步、初始化数据库表</h4><p>使用任意 <code>MySQL</code> 客户端工具连接到 <code>MySQL</code> 数据库服务器，创建名为<code>nacos</code>的数据库，之后使用 <code>MySQL</code> 客户端执 行 <code>nacos/conf/mysql-schema.sql</code> 文件，完成建表工作。<br><img src="http://oss.feny.ink/blogs/images/202312281325914.png" alt="" loading="lazy"></p><h4 id="第四步、配置-nacos-数据源-1" tabindex="-1"><a class="header-anchor" href="#第四步、配置-nacos-数据源-1" aria-hidden="true">#</a> 第四步、配置 Nacos 数据源</h4><p>依次打开 3 台 <code>Nacos</code> 服务器中的核心配置文件 <code>application.properties</code>，文件路径如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nacos/conf/application.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认数据源配置都被<code>#</code>号注释，删除注释按下方示例配置数据源即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">spring.sql.init.platform</span><span class="token operator">=</span>mysql

<span class="token comment">### Count of DB:</span>
<span class="token assign-left variable">db.num</span><span class="token operator">=</span><span class="token number">1</span>

<span class="token comment">### Connect URL of DB:</span>
<span class="token assign-left variable">db.url.0</span><span class="token operator">=</span>jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span><span class="token assign-left variable">connectTimeout</span><span class="token operator">=</span><span class="token number">1000</span><span class="token operator">&amp;</span><span class="token assign-left variable">socketTimeout</span><span class="token operator">=</span><span class="token number">3000</span><span class="token operator">&amp;</span><span class="token assign-left variable">autoReconnect</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useUnicode</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useSSL</span><span class="token operator">=</span>false<span class="token operator">&amp;</span><span class="token assign-left variable">serverTimezone</span><span class="token operator">=</span>UTC<span class="token operator">&amp;</span><span class="token assign-left variable">allowPublicKeyRetrieval</span><span class="token operator">=</span>true
<span class="token assign-left variable">db.user.0</span><span class="token operator">=</span>root
<span class="token assign-left variable">db.password.0</span><span class="token operator">=</span><span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>遇到的问题</strong><code>Nacos</code>启动时报以下错误错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Caused by: com.mysql.cj.exceptions.UnableToConnectException: Public Key Retrieval is not allowed
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
        at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>
        at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>
        at com.mysql.cj.exceptions.ExceptionFactory.createException<span class="token punctuation">(</span>ExceptionFactory.java:61<span class="token punctuation">)</span>
        at com.mysql.cj.exceptions.ExceptionFactory.createException<span class="token punctuation">(</span>ExceptionFactory.java:85<span class="token punctuation">)</span>
        at com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep<span class="token punctuation">(</span>CachingSha2PasswordPlugin.java:130<span class="token punctuation">)</span>
        <span class="token punctuation">..</span>. <span class="token number">142</span> common frames omitted
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解决办法：</strong> 在 <code>db.url</code> 后面加上 <code>allowPublicKeyRetrieval=true</code> 即可。</p><h4 id="第五步、nacos-集群节点配置" tabindex="-1"><a class="header-anchor" href="#第五步、nacos-集群节点配置" aria-hidden="true">#</a> 第五步、Nacos 集群节点配置</h4><p>在 <code>/nacos/config</code> 目录下提供了集群示例文件<code>cluster.conf.example</code> 首先利用复制命令创建 <code>cluster.conf</code> 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> cluster.conf.example cluster.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后打开 <code>cluster.conf</code>，添加所有 <code>Nacos</code> 集群节点 <code>IP </code>及端口，每台服务器上的<code>nacos</code>都要配置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.0.134:8848
<span class="token number">192.168</span>.0.138:8848
<span class="token number">192.168</span>.0.161:8848
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="第六步、启动-nacos-服务器" tabindex="-1"><a class="header-anchor" href="#第六步、启动-nacos-服务器" aria-hidden="true">#</a> 第六步、启动 <code>Nacos</code> 服务器</h4><p>在3台 <code>Nacos</code> 节点上分别执行下面的启动命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> /usr/local/nacos/bin/startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong> 集群模式下并不需要增加<code>-m</code>参数，默认就是以集群方式启动。</p></blockquote><p>启动时可以通过 tail 命令观察启动过程。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> /usr/local/nacos/logs/start.out
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,29),f=n("code",null,"IP",-1),x=n("code",null,"nacos",-1),_=n("img",{src:"http://oss.feny.ink/blogs/images/202312281325509.png",alt:"",loading:"lazy"},null,-1),y={href:"http://192.168.0.134:8848/nacos",target:"_blank",rel:"noopener noreferrer"},N={href:"http://192.168.0.136:8848/nacos",target:"_blank",rel:"noopener noreferrer"},E={href:"http://192.168.0.138:8848/nacos",target:"_blank",rel:"noopener noreferrer"},S=t(`<img src="http://oss.feny.ink/blogs/images/202401011644078.png" alt="image-20240101164412019" style="zoom:50%;"><h4 id="第七步、整合-nginx" tabindex="-1"><a class="header-anchor" href="#第七步、整合-nginx" aria-hidden="true">#</a> 第七步、整合 Nginx</h4><p>编辑<code>nginx.conf</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># ./nginx/conf/nginx.conf</span>
<span class="token function">vim</span> nginx.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>http</code>内输入以下内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Nacos 集群服务</span>
upstream nacos <span class="token punctuation">{</span>
    server <span class="token number">192.168</span>.0.134:8848<span class="token punctuation">;</span>
    server <span class="token number">192.168</span>.0.136:8848<span class="token punctuation">;</span>
    server <span class="token number">192.168</span>.0.161:8848<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

server <span class="token punctuation">{</span>
    listen       <span class="token number">80</span><span class="token punctuation">;</span>
    server_name  <span class="token number">192.168</span>.0.143<span class="token punctuation">;</span>
    location /nacos <span class="token punctuation">{</span>
        proxy_pass http://nacos<span class="token punctuation">;</span>
        proxy_set_header Host <span class="token variable">$host</span><span class="token punctuation">;</span>
        proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>hhtp</code>外配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># nacos的grpc协议配置</span>
stream <span class="token punctuation">{</span>
	<span class="token comment"># 负载均衡配置（TCP长连接配置）,端口号在前面的端口号前要进行偏置1000</span>
	upstream nacos-tcp <span class="token punctuation">{</span>
		server <span class="token number">192.168</span>.0.134:9848<span class="token punctuation">;</span>
		server <span class="token number">192.168</span>.0.136:9848<span class="token punctuation">;</span>
		server <span class="token number">192.168</span>.0.161:9848<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment"># 监听端口号在前面的端口号前要进行偏置1000</span>
	server <span class="token punctuation">{</span>
		listen <span class="token number">1080</span><span class="token punctuation">;</span>
		proxy_pass nacos-tcp<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整个<code>nginx.conf</code>配置如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>user  nginx<span class="token punctuation">;</span>
worker_processes  auto<span class="token punctuation">;</span>

error_log  /var/log/nginx/error.log notice<span class="token punctuation">;</span>
pid        /var/run/nginx.pid<span class="token punctuation">;</span>


events <span class="token punctuation">{</span>
    worker_connections  <span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


http <span class="token punctuation">{</span>
    include       /etc/nginx/mime.types<span class="token punctuation">;</span>
    default_type  application/octet-stream<span class="token punctuation">;</span>

    log_format  main  <span class="token string">&#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span>
                      <span class="token string">&#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span>
                      <span class="token string">&#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;</span><span class="token punctuation">;</span>

    access_log  /var/log/nginx/access.log  main<span class="token punctuation">;</span>

    sendfile        on<span class="token punctuation">;</span>
    <span class="token comment">#tcp_nopush     on;</span>

    keepalive_timeout  <span class="token number">65</span><span class="token punctuation">;</span>

    <span class="token comment">#gzip  on;</span>
	
	
	<span class="token comment"># Nacos 集群服务</span>
	upstream nacos <span class="token punctuation">{</span>
		server <span class="token number">192.168</span>.0.134:8848<span class="token punctuation">;</span>
		server <span class="token number">192.168</span>.0.136:8848<span class="token punctuation">;</span>
		server <span class="token number">192.168</span>.0.161:8848<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	 
	server <span class="token punctuation">{</span>
		listen       <span class="token number">8848</span><span class="token punctuation">;</span>
		server_name  <span class="token number">192.168</span>.0.143<span class="token punctuation">;</span>
		location /nacos <span class="token punctuation">{</span>
			proxy_pass http://nacos<span class="token punctuation">;</span>
			proxy_set_header Host <span class="token variable">$host</span><span class="token punctuation">;</span>
			proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

    include /etc/nginx/conf.d/*.conf<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment"># nacos的grpc协议配置</span>
stream <span class="token punctuation">{</span>
	<span class="token comment"># 负载均衡配置（TCP长连接配置）,端口号在前面的端口号前要进行偏置1000</span>
	upstream nacos-tcp <span class="token punctuation">{</span>
		server <span class="token number">192.168</span>.0.134:9848<span class="token punctuation">;</span>
		server <span class="token number">192.168</span>.0.136:9848<span class="token punctuation">;</span>
		server <span class="token number">192.168</span>.0.161:9848<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	server <span class="token punctuation">{</span>
		<span class="token comment"># 监听端口号在前面的端口号前要进行偏置1000</span>
		listen <span class="token number">9848</span><span class="token punctuation">;</span>
		proxy_pass nacos-tcp<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>退出保存，重启<code>nginx</code>，访问&lt;192.168.0.143:8848/nacos&gt;</p><h2 id="二、docker-环境安装-nacos" tabindex="-1"><a class="header-anchor" href="#二、docker-环境安装-nacos" aria-hidden="true">#</a> 二、Docker 环境安装 Nacos</h2><h3 id="单机模式运行-1" tabindex="-1"><a class="header-anchor" href="#单机模式运行-1" aria-hidden="true">#</a> 单机模式运行</h3><h4 id="第一步、拉取镜像" tabindex="-1"><a class="header-anchor" href="#第一步、拉取镜像" aria-hidden="true">#</a> 第一步、拉取镜像</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull nacos/nacos-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="第二步、创建挂载目录" tabindex="-1"><a class="header-anchor" href="#第二步、创建挂载目录" aria-hidden="true">#</a> 第二步、创建挂载目录</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/docker/nacos/conf /data/docker/nacos/logs /data/docker/nacos/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>-p 作用是在创建多级文件时，不存在某一级文件就会创建，存在就使用原文件</p></blockquote><h4 id="第三步、复制容器的相关文件到挂载目录" tabindex="-1"><a class="header-anchor" href="#第三步、复制容器的相关文件到挂载目录" aria-hidden="true">#</a> 第三步、复制容器的相关文件到挂载目录</h4><p>启动<code>Nacos</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> nacos <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8848</span>:8848 <span class="token parameter variable">-e</span> <span class="token assign-left variable">MODE</span><span class="token operator">=</span>standalone  nacos/nacos-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制容器的相关文件到挂载目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">cp</span> nacos:/home/nacos/conf /data/docker/nacos
<span class="token function">docker</span> <span class="token function">cp</span> nacos:/home/nacos/logs /data/docker/nacos
<span class="token function">docker</span> <span class="token function">cp</span> nacos:/home/nacos/data /data/docker/nacos
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>停止<code>Nacos</code>容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> stop nacos
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除<code>Nacos</code>容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">rm</span> nacos
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="第四步、初始化数据库表" tabindex="-1"><a class="header-anchor" href="#第四步、初始化数据库表" aria-hidden="true">#</a> 第四步、初始化数据库表</h4><p>使用任意 <code>MySQL</code> 客户端工具连接到 <code>MySQL</code> 数据库服务器，创建名为<code>nacos</code>的数据库，之后使用 <code>MySQL</code> 客户端执 行 <code>nacos/conf/mysql-schema.sql</code> 文件，完成建表工作。 <img src="http://oss.feny.ink/blogs/images/202312281325914.png" alt="" loading="lazy"></p><h4 id="第五步、配置-nacos-数据源" tabindex="-1"><a class="header-anchor" href="#第五步、配置-nacos-数据源" aria-hidden="true">#</a> 第五步、配置 Nacos 数据源</h4><p>找到<code>nacos</code>目录下配置文件 <code>application.properties</code>，文件路径如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./nacos/conf/application.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认数据源配置都被<code>#</code>号注释，删除注释按下方示例配置数据源即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">spring.sql.init.platform</span><span class="token operator">=</span>mysql
<span class="token assign-left variable">db.num</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">db.url.0</span><span class="token operator">=</span>jdbc:mysql://192.168.0.143:3306/nacos?characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span><span class="token assign-left variable">connectTimeout</span><span class="token operator">=</span><span class="token number">1000</span><span class="token operator">&amp;</span><span class="token assign-left variable">socketTimeout</span><span class="token operator">=</span><span class="token number">3000</span><span class="token operator">&amp;</span><span class="token assign-left variable">autoReconnect</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useUnicode</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useSSL</span><span class="token operator">=</span>false<span class="token operator">&amp;</span><span class="token assign-left variable">serverTimezone</span><span class="token operator">=</span>UTC<span class="token operator">&amp;</span><span class="token assign-left variable">allowPublicKeyRetrieval</span><span class="token operator">=</span>true
<span class="token assign-left variable">db.user.0</span><span class="token operator">=</span>root
<span class="token assign-left variable">db.password.0</span><span class="token operator">=</span><span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="第六步、单机模式启动-nacos" tabindex="-1"><a class="header-anchor" href="#第六步、单机模式启动-nacos" aria-hidden="true">#</a> 第六步、单机模式启动 Nacos</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">8848</span>:8848 <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">9848</span>:9848 <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">9849</span>:9849 <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">7848</span>:7848 <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">PREFER_HOST_MODE</span><span class="token operator">=</span>ip <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MODE</span><span class="token operator">=</span>standalone <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /data/docker/nacos/conf/:/home/nacos/conf <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /data/docker/nacos/logs:/home/nacos/logs <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /data/docker/nacos/data:/home/nacos/data <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> nacos <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
nacos/nacos-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看启动日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> nacos
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示如下内容，表示启动成功：</p><img src="http://oss.feny.ink/blogs/images/202401012222414.png" alt="image-20240101222210347" style="zoom:50%;"><h3 id="nacos集群模式运行-1" tabindex="-1"><a class="header-anchor" href="#nacos集群模式运行-1" aria-hidden="true">#</a> Nacos集群模式运行</h3><h3 id="公共属性配置" tabindex="-1"><a class="header-anchor" href="#公共属性配置" aria-hidden="true">#</a> 公共属性配置</h3><table><thead><tr><th>属性名称</th><th style="text-align:center;">描述</th><th></th></tr></thead><tbody><tr><td>MODE</td><td style="text-align:center;">系统启动方式：集群/单机</td><td>cluster/standalone默认 <strong>cluster</strong></td></tr><tr><td>NACOS_SERVERS</td><td style="text-align:center;">集群地址</td><td>ip1:port1空格ip2:port2 空格ip3:port3</td></tr><tr><td>PREFER_HOST_MODE</td><td style="text-align:center;">支持IP还是域名模式</td><td>hostname/ip 默认 <strong>ip</strong></td></tr><tr><td>NACOS_SERVER_PORT</td><td style="text-align:center;">Nacos运行端口</td><td>默认 <strong>8848</strong></td></tr><tr><td>NACOS_SERVER_IP</td><td style="text-align:center;">多网卡模式下可以指定IP</td><td></td></tr><tr><td>SPRING_DATASOURCE_PLATFORM</td><td style="text-align:center;">单机模式下支持MYSQL数据库</td><td>mysql/空 默认:空</td></tr><tr><td>MYSQL _SERVICE_HOST</td><td style="text-align:center;">数据库连接地址</td><td></td></tr><tr><td>MYSQL_SERVICE_PORT</td><td style="text-align:center;">数据库端口</td><td>默认 : <strong>3306</strong></td></tr><tr><td>MYSQL_SERVICE_DB_NAME</td><td style="text-align:center;">数据库库名</td><td></td></tr><tr><td>MYSQL SERVICE_USER</td><td style="text-align:center;">数据库用户名</td><td></td></tr><tr><td>MYSQL_SERVICE_PASSWORD</td><td style="text-align:center;">数据库用户密码</td><td></td></tr><tr><td>MYSQL_SERVICE DB_PARAM</td><td style="text-align:center;">数据库连接参数</td><td>默认：<strong>characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false</strong></td></tr><tr><td>MYSOL DATABASE_NUM</td><td style="text-align:center;">数据库编号</td><td>默认 :<strong>1</strong></td></tr><tr><td>JVM_XMS</td><td style="text-align:center;">-Xms</td><td>默认 :1g</td></tr><tr><td>JVM XMX</td><td style="text-align:center;">-Xmx</td><td>默认 :1g</td></tr><tr><td>JVM_XMN</td><td style="text-align:center;">-Xmn</td><td>默认 :512m</td></tr><tr><td>JVM_MS</td><td style="text-align:center;">-XX:MetaspaceSize</td><td>默认 :128m</td></tr><tr><td>JVM_MMS</td><td style="text-align:center;">-XX:MaxMetaspaceSize</td><td>默认 :320m</td></tr><tr><td>NACOS_DEBUG</td><td style="text-align:center;">是否开启远程DEBUG</td><td>y/n 默认 :n</td></tr><tr><td>TOMCAT_ACCESSLOG_ENABLED</td><td style="text-align:center;">server.tomcat.accesslog.enabled</td><td>默认 :false</td></tr><tr><td>NACOS_AUTH SYSTEM_TYPE</td><td style="text-align:center;">权限系统类型选择，目前只支持nacos类型</td><td>默认 :nacos</td></tr><tr><td>NACOS_AUTH_ENABLE</td><td style="text-align:center;">是否开启权限系统</td><td>默认 :false</td></tr><tr><td>NACOS_AUTH TOKEN_EXPIRE_SECONDS</td><td style="text-align:center;">token失效时间</td><td>默认 :18000</td></tr><tr><td>NACOS_AUTH_TOKEN</td><td style="text-align:center;">token</td><td>默认 :SecretKey012345678901234567890123456789012345678901234567890123456789</td></tr><tr><td>NACOS_AUTH CACHE_ENABLE</td><td style="text-align:center;">权限缓存开关开启后权限缓存的更新默认有15秒的延迟</td><td>默认 : false</td></tr><tr><td>MEMBER_LIST</td><td style="text-align:center;">通过环境变量的方式设置集群地址</td><td>例子:192.168.16.101:8847?raft_port=8807,192.168.16.101?raft_port=8808,192.168.16.101:8849?raft_port=8809</td></tr><tr><td>EMBEDDED_STORAGE</td><td style="text-align:center;">是否开启集群嵌入式存储模式</td><td><code>embedded</code> 默认 : none</td></tr><tr><td>NACOS_AUTH_CACHE_ENABLE</td><td style="text-align:center;">nacos.core.auth.caching.enabled</td><td>默认 : false</td></tr><tr><td>NACOS_AUTH_USER_AGENT_AUTH_WHITE ENABLE</td><td style="text-align:center;">nacos.core.auth.enable.userAgentAuthWhite</td><td>默认 : false</td></tr><tr><td>NACOS_AUTH_IDENTITY_KEY</td><td style="text-align:center;">nacos.core.auth.server.identity.key</td><td></td></tr><tr><td>NACOS_AUTH_IDENTITY_VALUE</td><td style="text-align:center;">nacos.core.auth.server.identity.value</td><td></td></tr><tr><td>NACOS_SECURITY_IGNORE_URLS</td><td style="text-align:center;">nacos.security.ignore.urls</td><td>默认：/,/error,/<strong>/*.css,/</strong>/<em>.js,/**/</em>.html,/<strong>/*.map,/</strong>/<em>.svg,/**/</em>.png,/<strong>/*.ico,/console-fe/public/</strong>,/v1/auth/<strong>,/v1/console/health/</strong>,/actuator/<strong>,/v1/console/server/</strong></td></tr></tbody></table><h2 id="三、nacos-开启身份认证" tabindex="-1"><a class="header-anchor" href="#三、nacos-开启身份认证" aria-hidden="true">#</a> 三、Nacos 开启身份认证</h2><p><code>Nacos</code>自<code>2.2.2</code>版本开始，在未开启鉴权时，默认控制台将不需要登录即可访问，同时在控制台中给予提示，提醒用户当前集群未开启鉴权。 在用户开启鉴权后，控制台才需要进行登录访问。</p><p>修改<code>application.properties</code>中的配置信息为：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在2.2.0.1版本后默认为false</span>
<span class="token assign-left variable">nacos.core.auth.enabled</span><span class="token operator">=</span>true

<span class="token comment"># 在2.2.0.1版本后默认为空，随自己喜欢自定义</span>
<span class="token assign-left variable">nacos.core.auth.server.identity.key</span><span class="token operator">=</span>serverIdentity

<span class="token comment"># 在2.2.0.1版本后默认为空，随自己喜欢自定义</span>
<span class="token assign-left variable">nacos.core.auth.server.identity.value</span><span class="token operator">=</span>security

<span class="token comment"># 自定义密钥时，推荐将配置项设置为Base64编码的字符串，且原始密钥长度不得低于32字符</span>
<span class="token assign-left variable">nacos.core.auth.plugin.nacos.token.secret.key</span><span class="token operator">=</span>cjViZWc2MmRndmdwMjNiNGoyNDZnNGN1bTQ0bWpzMXo<span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为方便省事，使用<code>Hutool</code>工具生成 <code>nacos.core.auth.plugin.nacos.token.secret.key</code> 的自定义密钥：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">RandomUtil</span></span><span class="token punctuation">;</span>

<span class="token comment">// 生成Nacos密码</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">RandomUtil</span><span class="token punctuation">.</span><span class="token function">randomString</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、服务注册到-nacos" tabindex="-1"><a class="header-anchor" href="#四、服务注册到-nacos" aria-hidden="true">#</a> 四、服务注册到 Nacos</h2><h3 id="_1-、新建项目" tabindex="-1"><a class="header-anchor" href="#_1-、新建项目" aria-hidden="true">#</a> （1）、新建项目</h3><p>在 IntelliJ IDEA 新建项目<br><img src="http://oss.feny.ink/blogs/images/202312281326203.png" alt="" loading="lazy"></p>`,52),C={href:"http://start.aliyun.com",target:"_blank",rel:"noopener noreferrer"},A=n("br",null,null,-1),T=n("img",{src:"http://oss.feny.ink/blogs/images/202312281326235.png",alt:"",loading:"lazy"},null,-1),M=t(`<p>依赖选择如下：<br><img src="http://oss.feny.ink/blogs/images/202312281326925.png" alt="" loading="lazy"><br> 选择完成后点击 Next，项目名，存放路径按自己喜好设置好，点击Finish完成</p><h3 id="_2-、服务注册到-nacos" tabindex="-1"><a class="header-anchor" href="#_2-、服务注册到-nacos" aria-hidden="true">#</a> （2）、服务注册到 Nacos</h3><p>打开 application.yml 文件，配置 Nacos 服务地址</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10080</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
    <span class="token key atrule">application</span><span class="token punctuation">:</span>
        <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>alibaba<span class="token punctuation">-</span>study
    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
        <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
            <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
                <span class="token comment"># 命名空间，一般多环境时使用，如：dev、test、prod</span>
                <span class="token key atrule">namespace</span><span class="token punctuation">:</span> public
                <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP
                <span class="token comment"># Nacos服务器地址</span>
                <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.0.143<span class="token punctuation">:</span><span class="token number">8848</span>
                <span class="token comment"># 用户名，如果Nacos未开启身份认证，请注释掉</span>
                <span class="token key atrule">username</span><span class="token punctuation">:</span> nacos
                <span class="token comment"># 默认密码为 nacos</span>
                <span class="token key atrule">password</span><span class="token punctuation">:</span> nacos

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-、启动服务" tabindex="-1"><a class="header-anchor" href="#_3-、启动服务" aria-hidden="true">#</a> （3）、启动服务</h3><p>服务启动成功后，在Nacos控制台--服务管理--服务列表中看到有服务，表示服务注册成功</p><figure><img src="http://oss.feny.ink/blogs/images/202312281326377.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="五、配置管理" tabindex="-1"><a class="header-anchor" href="#五、配置管理" aria-hidden="true">#</a> 五、配置管理</h2>`,8);function R(I,w){const s=o("ExternalLinkIcon");return i(),l("div",null,[p,n("p",null,[a("访问 "),d,a("："),n("a",u,[a("https://github.com/alibaba/nacos/releases/"),e(s)]),a("获取"),v]),m,n("p",null,[a("打开浏览器，地址栏输入："),n("a",b,[a("http://localhost:8848/nacos/"),e(s)]),k,h]),g,n("p",null,[a("当确保所有节点均启动成功，打开浏览器访问对应的"),f,a("地址"),x,a("后台，便可看到集群列表 "),_,a(" 分别打开"),n("a",y,[a("http://192.168.0.134:8848/nacos"),e(s)]),a("、"),n("a",N,[a("http://192.168.0.136:8848/nacos"),e(s)]),a("、"),n("a",E,[a("http://192.168.0.138:8848/nacos"),e(s)]),a("，可以看到集群的节点")]),S,n("p",null,[a("选择Spring Initializr-->选Custom，填写阿里 "),n("a",C,[a("http://start.aliyun.com"),e(s)]),a("，点击Next进行下一步"),A,T]),M])}const L=c(r,[["render",R],["__file","Nacos.html.vue"]]);export{L as default};
