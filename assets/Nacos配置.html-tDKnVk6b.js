import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as l,b as a,d as s,e,a as t}from"./app-th1b68Tc.js";const p={},r=a("h1",{id:"nacos-相关",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#nacos-相关","aria-hidden":"true"},"#"),s(" Nacos 相关")],-1),d=a("h2",{id:"一、nacos-centos下安装使用",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#一、nacos-centos下安装使用","aria-hidden":"true"},"#"),s(" 一、Nacos CentOS下安装使用")],-1),u={id:"第一步、访问-nacos-github-https-github-com-alibaba-nacos-releases-获取-nacos-最新版安装包",tabindex:"-1"},m=a("a",{class:"header-anchor",href:"#第一步、访问-nacos-github-https-github-com-alibaba-nacos-releases-获取-nacos-最新版安装包","aria-hidden":"true"},"#",-1),v={href:"https://github.com/alibaba/nacos/releases/",target:"_blank",rel:"noopener noreferrer"},b=t(`<h3 id="第二步、上传nacos到centos系统-对安装包解压缩。" tabindex="-1"><a class="header-anchor" href="#第二步、上传nacos到centos系统-对安装包解压缩。" aria-hidden="true">#</a> 第二步、上传Nacos到CentOS系统，对安装包解压缩。</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@server-1 local]# tar -xvf nacos-server-2.3.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="第三步、以单点方式启动-nacos。" tabindex="-1"><a class="header-anchor" href="#第三步、以单点方式启动-nacos。" aria-hidden="true">#</a> 第三步、以单点方式启动 Nacos。</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@server-1 local<span class="token punctuation">]</span><span class="token comment"># cd nacos/bin</span>
<span class="token punctuation">[</span>root@server-1 bin<span class="token punctuation">]</span><span class="token comment"># sh startup.sh -m standalone</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>默认 Nacos 以后台模式启动，利用 tail 命令查看启动日志。可以看到 Nacos 默认端口为 8848，下 面日志说明 Nacos 单机模式已启动成功。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@server-1 bin<span class="token punctuation">]</span><span class="token comment"># tail -f /usr/local/nacos/logs/start.out</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="第四步、设置防火墙对nacos端口放行。" tabindex="-1"><a class="header-anchor" href="#第四步、设置防火墙对nacos端口放行。" aria-hidden="true">#</a> 第四步、设置防火墙对nacos端口放行。</h3><table><thead><tr><th>端口</th><th>描述</th></tr></thead><tbody><tr><td>8848</td><td>主端口，客户端、控制台及OpenAPI所使用的HTTP端口</td></tr><tr><td>9848</td><td>客户端gRPC请求服务端端口，用于客户端向服务端发起连接和请求</td></tr><tr><td>9849</td><td>服务端gRPC请求服务端端口，用于服务间同步等</td></tr><tr><td>7848</td><td>Jraft请求服务端端口，用于处理服务端间的Raft相关请求</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@server-1 bin<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --zone=public --add-port=8848/tcp --perm anent</span>
success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@server-1 bin<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --zone=public --add-port=9848/tcp --perm anent</span>
success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@server-1 bin<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --zone=public --add-port=9849/tcp --perm anent</span>
success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@server-1 bin<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --zone=public --add-port=7848/tcp --perm anent</span>
success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>重启防火墙使配置生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@server-1 bin<span class="token punctuation">]</span><span class="token comment"># firewall-cmd --reload</span>
success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，Nacos 已单机部署完毕。</p><h3 id="第五步-进入-nacos-管理界面" tabindex="-1"><a class="header-anchor" href="#第五步-进入-nacos-管理界面" aria-hidden="true">#</a> 第五步，进入 Nacos 管理界面</h3>`,16),h={href:"http://localhost:8848/nacos/",target:"_blank",rel:"noopener noreferrer"},k=a("br",null,null,-1),g=a("img",{src:"http://oss.feny.ink/images/202312281325743.png",alt:"",loading:"lazy"},null,-1),f=t(`<h2 id="二、nacos集群配置" tabindex="-1"><a class="header-anchor" href="#二、nacos集群配置" aria-hidden="true">#</a> 二、Nacos集群配置</h2><h3 id="第一步、环境准备" tabindex="-1"><a class="header-anchor" href="#第一步、环境准备" aria-hidden="true">#</a> 第一步、环境准备</h3><p>Nacos 因为选举算法的特殊性，要求最少三个节点才能组成一个有效的集群，这里需要准备三台服务器（虚拟机）</p><h3 id="第二步、下载安装-nacos" tabindex="-1"><a class="header-anchor" href="#第二步、下载安装-nacos" aria-hidden="true">#</a> 第二步、下载安装 Nacos</h3><h3 id="第三步、配置数据库" tabindex="-1"><a class="header-anchor" href="#第三步、配置数据库" aria-hidden="true">#</a> 第三步、配置数据库</h3><p>使用任意 MySQL 客户端工具连接到 MySQL 数据库服务器，创建名为nacos的数据库，之后使用 MySQL 客户端执 行 nacos/conf/mysql-schema.sql 文件，完成建表工作。<br><img src="http://oss.feny.ink/images/202312281325914.png" alt="" loading="lazy"></p><h3 id="第四步、配置-nacos-数据源" tabindex="-1"><a class="header-anchor" href="#第四步、配置-nacos-数据源" aria-hidden="true">#</a> 第四步、配置 Nacos 数据源</h3><p>依次打开 3 台 Nacos 服务器中的核心配置文件 application.properties，文件路径如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nacos/conf/application.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认数据源配置都被#号注释，删除注释按下方示例配置数据源即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">spring.sql.init.platform</span><span class="token operator">=</span>mysql

<span class="token comment">### Count of DB:</span>
<span class="token assign-left variable">db.num</span><span class="token operator">=</span><span class="token number">1</span>

<span class="token comment">### Connect URL of DB:</span>
<span class="token assign-left variable">db.url.0</span><span class="token operator">=</span>jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span><span class="token assign-left variable">connectTimeout</span><span class="token operator">=</span><span class="token number">1000</span><span class="token operator">&amp;</span><span class="token assign-left variable">socketTimeout</span><span class="token operator">=</span><span class="token number">3000</span><span class="token operator">&amp;</span><span class="token assign-left variable">autoReconnect</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useUnicode</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">useSSL</span><span class="token operator">=</span>false<span class="token operator">&amp;</span><span class="token assign-left variable">serverTimezone</span><span class="token operator">=</span>UTC<span class="token operator">&amp;</span><span class="token assign-left variable">allowPublicKeyRetrieval</span><span class="token operator">=</span>true
<span class="token assign-left variable">db.user.0</span><span class="token operator">=</span>root
<span class="token assign-left variable">db.password.0</span><span class="token operator">=</span><span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>遇到的问题</strong><br> Nacos启动时报以下错误错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Caused by: com.mysql.cj.exceptions.UnableToConnectException: Public Key Retrieval is not allowed
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
        at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>
        at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>
        at com.mysql.cj.exceptions.ExceptionFactory.createException<span class="token punctuation">(</span>ExceptionFactory.java:61<span class="token punctuation">)</span>
        at com.mysql.cj.exceptions.ExceptionFactory.createException<span class="token punctuation">(</span>ExceptionFactory.java:85<span class="token punctuation">)</span>
        at com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep<span class="token punctuation">(</span>CachingSha2PasswordPlugin.java:130<span class="token punctuation">)</span>
        <span class="token punctuation">..</span>. <span class="token number">142</span> common frames omitted
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解决办法：</strong> 在 db.url 后面加上 allowPublicKeyRetrieval=true 即可</p><h3 id="第五步、nacos-集群节点配置" tabindex="-1"><a class="header-anchor" href="#第五步、nacos-集群节点配置" aria-hidden="true">#</a> 第五步、Nacos 集群节点配置</h3><p>在 /nacos/config 目录下提供了集群示例文件cluster.conf.example<br> 首先利用复制命令创建 cluster.conf 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> cluster.conf.example cluster.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后打开 cluster.conf，添加所有 Nacos 集群节点 IP 及端口。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.0.127:8848
<span class="token number">192.168</span>.0.139:8848
<span class="token number">192.168</span>.0.156:8848
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第六步、启动 Nacos 服务器。<br> 在3台 Nacos 节点上分别执行下面的启动命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> /usr/local/nacos/bin/startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意：</strong> 集群模式下并不需要增加“-m”参数，默认就是以集群方式启动。<br> 启动时可以通过 tail 命令观察启动过程。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> /usr/local/nacos/logs/start.out
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当确保所有节点均启动成功，打开浏览器访问对应的IP地址nacos后台，便可看到集群列表<br><img src="http://oss.feny.ink/images/202312281325509.png" alt="" loading="lazy"><img src="http://oss.feny.ink/images/202312281325256.png" alt="" loading="lazy"></p><h2 id="三、nacos-开启身份认证" tabindex="-1"><a class="header-anchor" href="#三、nacos-开启身份认证" aria-hidden="true">#</a> 三、Nacos 开启身份认证</h2><p>Nacos自2.2.2版本开始，在未开启鉴权时，默认控制台将不需要登录即可访问，同时在控制台中给予提示，提醒用户当前集群未开启鉴权。</p><p>在用户开启鉴权后，控制台才需要进行登录访问。</p><p>修改application.properties中的配置信息为：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在2.2.0.1版本后默认为false</span>
<span class="token assign-left variable">nacos.core.auth.enabled</span><span class="token operator">=</span>true

<span class="token comment"># 在2.2.0.1版本后默认为空，随自己喜欢自定义</span>
<span class="token assign-left variable">nacos.core.auth.server.identity.key</span><span class="token operator">=</span>Feny

<span class="token comment"># 在2.2.0.1版本后默认为空，随自己喜欢自定义</span>
<span class="token assign-left variable">nacos.core.auth.server.identity.value</span><span class="token operator">=</span>Feny

<span class="token comment"># 自定义密钥时，推荐将配置项设置为Base64编码的字符串，且原始密钥长度不得低于32字符</span>
<span class="token assign-left variable">nacos.core.auth.plugin.nacos.token.secret.key</span><span class="token operator">=</span>cjViZWc2MmRndmdwMjNiNGoyNDZnNGN1bTQ0bWpzMXo<span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为方便省事，使用Hutool工具生成 nacos.core.auth.plugin.nacos.token.secret.key 的自定义密钥：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">RandomUtil</span></span><span class="token punctuation">;</span>

<span class="token comment">// 生成Nacos密码</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">RandomUtil</span><span class="token punctuation">.</span><span class="token function">randomString</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、服务注册到-nacos" tabindex="-1"><a class="header-anchor" href="#四、服务注册到-nacos" aria-hidden="true">#</a> 四、服务注册到 Nacos</h2><h3 id="_1-、新建项目" tabindex="-1"><a class="header-anchor" href="#_1-、新建项目" aria-hidden="true">#</a> （1）、新建项目</h3><p>在 IntelliJ IDEA 新建项目<br><img src="http://oss.feny.ink/images/202312281326203.png" alt="" loading="lazy"></p>`,34),y={href:"http://start.aliyun.com",target:"_blank",rel:"noopener noreferrer"},x=a("br",null,null,-1),_=a("img",{src:"http://oss.feny.ink/images/202312281326235.png",alt:"",loading:"lazy"},null,-1),N=t(`<p>依赖选择如下：<br><img src="http://oss.feny.ink/images/202312281326925.png" alt="" loading="lazy"><br> 选择完成后点击 Next，项目名，存放路径按自己喜好设置好，点击Finish完成</p><h3 id="_2-、服务注册到-nacos" tabindex="-1"><a class="header-anchor" href="#_2-、服务注册到-nacos" aria-hidden="true">#</a> （2）、服务注册到 Nacos</h3><p>打开 application.yml 文件，配置 Nacos 服务地址</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10080</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
    <span class="token key atrule">application</span><span class="token punctuation">:</span>
        <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>alibaba<span class="token punctuation">-</span>study
    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
        <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
            <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
                <span class="token comment"># 命名空间，一般多环境时使用，如：dev、test、prod</span>
                <span class="token key atrule">namespace</span><span class="token punctuation">:</span> public
                <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP
                <span class="token comment"># Nacos服务器地址</span>
                <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span>
                <span class="token comment"># 用户名，如果Nacos未开启身份认证，请注释掉</span>
                <span class="token key atrule">username</span><span class="token punctuation">:</span> nacos
                <span class="token comment"># 密码已修改，默认密码为 nacos</span>
                <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-、启动服务" tabindex="-1"><a class="header-anchor" href="#_3-、启动服务" aria-hidden="true">#</a> （3）、启动服务</h3><p>服务启动成功后，在Nacos控制台--服务管理--服务列表中看到有服务，表示服务注册成功</p><figure><img src="http://oss.feny.ink/images/202312281326377.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="四、服务间请求" tabindex="-1"><a class="header-anchor" href="#四、服务间请求" aria-hidden="true">#</a> 四、服务间请求</h2>`,8);function C(w,j){const n=o("ExternalLinkIcon");return i(),l("div",null,[r,d,a("h3",u,[m,s(" 第一步、访问 Nacos GitHub："),a("a",v,[s("https://github.com/alibaba/nacos/releases/"),e(n)]),s("获取 Nacos 最新版安装包")]),b,a("p",null,[s("打开浏览器，地址栏输入："),a("a",h,[s("http://localhost:8848/nacos/"),e(n)]),k,g]),f,a("p",null,[s("选择Spring Initializr-->选Custom，填写阿里 "),a("a",y,[s("http://start.aliyun.com"),e(n)]),s("，点击Next进行下一步"),x,_]),N])}const P=c(p,[["render",C],["__file","Nacos配置.html.vue"]]);export{P as default};
