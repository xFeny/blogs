import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as d,c as l,a,b as n,d as e,e as i}from"./app-KQawkIi2.js";const t={},o=a("h1",{id:"docker-常用命令",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#docker-常用命令","aria-hidden":"true"},"#"),n(" Docker 常用命令")],-1),p={href:"https://blog.51cto.com/u_16099178/7533617?abTest=51cto",target:"_blank",rel:"noopener noreferrer"},u=i(`<h2 id="容器操作" tabindex="-1"><a class="header-anchor" href="#容器操作" aria-hidden="true">#</a> 容器操作</h2><h3 id="创建一个新的容器" tabindex="-1"><a class="header-anchor" href="#创建一个新的容器" aria-hidden="true">#</a> 创建一个新的容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 <span class="token parameter variable">--name</span><span class="token operator">=</span>tomcat tomcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>run命令常用参数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token parameter variable">-i</span> 以交互模式运行容器，通常与 <span class="token parameter variable">-t</span> 同时使用
<span class="token parameter variable">-t</span> 为容器重新分配一个伪输入终端，通常与 <span class="token parameter variable">-i</span> 同时使用
<span class="token parameter variable">-d</span> 后台运行容器，并返回容器ID
<span class="token parameter variable">-c</span> 参数用于给运行的容器分配cpu的shares值
<span class="token parameter variable">-m</span> 参数用于限制为容器的内存信息，以 B、K、M、G 为单位
<span class="token parameter variable">-v</span> 参数用于挂载一个卷，可以用多个-v参数同时挂载多个卷
<span class="token parameter variable">-p</span> 指定端口映射，格式为：主机<span class="token punctuation">(</span>宿主<span class="token punctuation">)</span>端口:容器端口 或者 主机<span class="token punctuation">(</span>宿主<span class="token punctuation">)</span>IP:主机<span class="token punctuation">(</span>宿主<span class="token punctuation">)</span>端口:容器端口
<span class="token parameter variable">-P</span> 随机端口映射，容器内部端口随机映射到主机的端口
<span class="token parameter variable">-e</span> 设置环境变量
<span class="token parameter variable">--name</span><span class="token operator">=</span>nginx-lb 为容器指定一个名称
<span class="token parameter variable">--net</span><span class="token operator">=</span>bridge 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用 docker run --help 可以查看详细参数。</p>`,6),m=a("strong",null,"实例：",-1),v={href:"https://www.runoob.com/docker/docker-run-command.html",target:"_blank",rel:"noopener noreferrer"},h=i(`<h3 id="停止容器" tabindex="-1"><a class="header-anchor" href="#停止容器" aria-hidden="true">#</a> 停止容器</h3><p>停止一个运行中的容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> stop demo1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="启动容器" tabindex="-1"><a class="header-anchor" href="#启动容器" aria-hidden="true">#</a> 启动容器</h3><p>启动一个或多个已经被停止的容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> start demo1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="重启容器" tabindex="-1"><a class="header-anchor" href="#重启容器" aria-hidden="true">#</a> 重启容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart demo1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看容器" tabindex="-1"><a class="header-anchor" href="#查看容器" aria-hidden="true">#</a> 查看容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看正在运行的容器</span>
<span class="token function">docker</span> <span class="token function">ps</span>
<span class="token comment"># 查看所有容 包括停止的容器</span>
<span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>
<span class="token comment"># 查看容器详细信息</span>
<span class="token function">docker</span> inspect demo1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器进程" tabindex="-1"><a class="header-anchor" href="#容器进程" aria-hidden="true">#</a> 容器进程</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#top支持 ps 命令参数，格式：docker top [OPTIONS] CONTAINER [ps OPTIONS]</span>
<span class="token comment">#列出redis容器中运行进程</span>
<span class="token function">docker</span> <span class="token function">top</span> redis
<span class="token comment">#查看所有运行容器的进程信息</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span>  <span class="token variable"><span class="token variable">\`</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token operator">|</span><span class="token function">grep</span> Up<span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span><span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token punctuation">\\</span> <span class="token operator">&amp;&amp;</span><span class="token function">docker</span> <span class="token function">top</span> <span class="token variable">$i</span><span class="token punctuation">;</span> <span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器日志" tabindex="-1"><a class="header-anchor" href="#容器日志" aria-hidden="true">#</a> 容器日志</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看redis容器日志，默认参数</span>
<span class="token function">docker</span> logs redis
<span class="token comment">#查看redis容器日志，参数：-f 跟踪日志输出；-t 显示时间戳；--tail 仅列出最新N条容器日志；</span>
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">--tail</span><span class="token operator">=</span><span class="token number">20</span> redis
<span class="token comment">#查看容器redis从2020年06月01日后的最新10条日志。</span>
<span class="token function">docker</span> logs <span class="token parameter variable">--since</span><span class="token operator">=</span><span class="token string">&quot;2020-06-01&quot;</span> <span class="token parameter variable">--tail</span><span class="token operator">=</span><span class="token number">10</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="进入容器" tabindex="-1"><a class="header-anchor" href="#进入容器" aria-hidden="true">#</a> 进入容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> demo1 /bin/sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除容器" tabindex="-1"><a class="header-anchor" href="#删除容器" aria-hidden="true">#</a> 删除容器</h3><p>删除一个或多个容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#　删除一个已经停止运行的容器</span>
<span class="token function">docker</span> <span class="token function">rm</span> demo1
<span class="token comment"># 强制删除正在运行的容器</span>
<span class="token function">docker</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> dome1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="停止容器-1" tabindex="-1"><a class="header-anchor" href="#停止容器-1" aria-hidden="true">#</a> 停止容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#停止一个运行中的容器</span>
<span class="token function">docker</span> stop redis
<span class="token comment">#杀掉一个运行中的容器</span>
<span class="token function">docker</span> <span class="token function">kill</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据拷贝" tabindex="-1"><a class="header-anchor" href="#数据拷贝" aria-hidden="true">#</a> 数据拷贝</h3><p>用于容器与主机之间的数据拷贝</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将容器nginx.conf文件复制到宿主机</span>
<span class="token function">docker</span> <span class="token function">cp</span> nginx:/etc/nginx/nginx.conf /data/docker/nginx/conf

<span class="token comment"># 将宿主机nginx.conf文件复制到容器</span>
<span class="token function">docker</span> <span class="token function">cp</span> /data/docker/nginx/conf/nginx.conf nginx:/etc/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入、导出容器" tabindex="-1"><a class="header-anchor" href="#导入、导出容器" aria-hidden="true">#</a> 导入、导出容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将容器导出为镜像</span>
<span class="token function">docker</span> <span class="token builtin class-name">export</span> demo1 <span class="token operator">&gt;</span> demo1.tar
<span class="token comment"># 导入镜像</span>
<span class="token function">docker</span> <span class="token function">import</span> demo1.tar xxx/demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://oss.feny.ink/blogs/images/202401041334279.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="镜像操作" tabindex="-1"><a class="header-anchor" href="#镜像操作" aria-hidden="true">#</a> 镜像操作</h2><h3 id="搜索镜像" tabindex="-1"><a class="header-anchor" href="#搜索镜像" aria-hidden="true">#</a> 搜索镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在远程仓库搜索镜像</span>
<span class="token function">docker</span> search ngix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取镜像" tabindex="-1"><a class="header-anchor" href="#获取镜像" aria-hidden="true">#</a> 获取镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull ngix
<span class="token comment"># 指定版本</span>
<span class="token function">docker</span> pull mysql:8.0
<span class="token comment"># 从不同的仓库拉取镜像</span>
<span class="token comment"># docker pull [Docker Registry 地址[:端口号]/]仓库名[:标签]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除镜像" tabindex="-1"><a class="header-anchor" href="#删除镜像" aria-hidden="true">#</a> 删除镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> rmi ngix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="列出本地镜像" tabindex="-1"><a class="header-anchor" href="#列出本地镜像" aria-hidden="true">#</a> 列出本地镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,36);function b(k,g){const s=c("ExternalLinkIcon");return d(),l("div",null,[o,a("p",null,[n("原文："),a("a",p,[n("https://blog.51cto.com/u_16099178/7533617?abTest=51cto"),e(s)])]),u,a("p",null,[m,n(),a("a",v,[n("https://www.runoob.com/docker/docker-run-command.html"),e(s)])]),h])}const _=r(t,[["render",b],["__file","Docker 常用命令.html.vue"]]);export{_ as default};
